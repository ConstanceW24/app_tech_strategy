{
	"name": "pl_ext_feature_master",
	"properties": {
		"activities": [
			{
				"name": "dbx_Start_PL_Audit_Log",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
					"baseParameters": {
						"batch_id": {
							"value": "@pipeline().parameters.param_Batch_ID",
							"type": "Expression"
						},
						"in_pl_audit_id": " ",
						"pl_activity_name": {
							"value": "@variables('var_Activity_Name')",
							"type": "Expression"
						},
						"pl_comments": " ",
						"pl_log_state": {
							"value": "@variables('var_PL_Log_State_Ins')",
							"type": "Expression"
						},
						"pl_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"pl_status": {
							"value": "@variables('var_PL_Log_Status_InProgress')",
							"type": "Expression"
						},
						"Catalog_Name": {
							"value": "@pipeline().parameters.param_Refined_Catalog_Name",
							"type": "Expression"
						},
						"Schema_Name": {
							"value": "@pipeline().parameters.param_Refined_Schema_Name",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "claims_data_extraction",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "if_Prev_Payment_PL_Complete",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "dbx_Start_PL_Audit_Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "epl_ext_feature",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_ext_feature",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"param_Batch_ID": {
										"value": "@pipeline().parameters.param_Batch_ID",
										"type": "Expression"
									},
									"param_PL_Audit_ID": {
										"value": "@activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id",
										"type": "Expression"
									},
									"param_CDA_Catalog_Name": {
										"value": "@pipeline().parameters.param_CDA_Catalog_Name",
										"type": "Expression"
									},
									"param_CDA_Schema_Name": {
										"value": "@pipeline().parameters.param_CDA_Schema_Name",
										"type": "Expression"
									},
									"param_Refined_Catalog_Name": {
										"value": "@pipeline().parameters.param_Refined_Catalog_Name",
										"type": "Expression"
									},
									"param_Refined_Schema_Name": {
										"value": "@pipeline().parameters.param_Refined_Schema_Name",
										"type": "Expression"
									},
									"param_query_container_name": {
										"value": "@pipeline().parameters.param_query_container_name",
										"type": "Expression"
									},
									"param_storage_account_name": {
										"value": "@pipeline().parameters.param_storage_account_name",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "dbx_End_PL_Audit_Log_S",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "epl_ext_feature",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
								"baseParameters": {
									"batch_id": {
										"value": "@pipeline().parameters.param_Batch_ID",
										"type": "Expression"
									},
									"in_pl_audit_id": {
										"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
										"type": "Expression"
									},
									"pl_activity_name": {
										"value": "@variables('var_Activity_Name')",
										"type": "Expression"
									},
									"pl_comments": " ",
									"pl_log_state": {
										"value": "@variables('var_PL_Log_State_Upd')",
										"type": "Expression"
									},
									"pl_name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"pl_status": {
										"value": "@variables('var_PL_Status_Success')",
										"type": "Expression"
									},
									"Catalog_Name": {
										"value": "@pipeline().parameters.param_Refined_Catalog_Name",
										"type": "Expression"
									},
									"Schema_Name": {
										"value": "@pipeline().parameters.param_Refined_Schema_Name",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "claims_data_extraction",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "dbx_End_PL_Audit_Log_F",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "epl_ext_feature",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
								"baseParameters": {
									"batch_id": {
										"value": "@pipeline().parameters.param_Batch_ID",
										"type": "Expression"
									},
									"in_pl_audit_id": {
										"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
										"type": "Expression"
									},
									"pl_activity_name": {
										"value": "@variables('var_Activity_Name')",
										"type": "Expression"
									},
									"pl_comments": {
										"value": "@activity('epl_ext_feature').Error.Message",
										"type": "Expression"
									},
									"pl_log_state": {
										"value": "@variables('var_PL_Log_State_Upd')",
										"type": "Expression"
									},
									"pl_name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"pl_status": {
										"value": "@variables('var_PL_Status_Failure')",
										"type": "Expression"
									},
									"Catalog_Name": {
										"value": "@pipeline().parameters.param_Refined_Catalog_Name",
										"type": "Expression"
									},
									"Schema_Name": {
										"value": "@pipeline().parameters.param_Refined_Schema_Name",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "claims_data_extraction",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "epl_ext_feature_csv_master",
				"type": "ExecutePipeline",
				"dependsOn": [
					{
						"activity": "if_Prev_Feature_MA_PL_Complete",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "if_Prev_Payment_PL_Complete",
						"dependencyConditions": [
							"Succeeded"
						]
					},
					{
						"activity": "if_Prev_Feature_Phones_PL_Complete",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"pipeline": {
						"referenceName": "pl_ext_payment_csv_generation",
						"type": "PipelineReference"
					},
					"waitOnCompletion": true,
					"parameters": {
						"param_Batch_ID": {
							"value": "@pipeline().parameters.param_Batch_ID",
							"type": "Expression"
						},
						"param_MDO_FolderName": {
							"value": "@pipeline().parameters.param_MDO_FolderName",
							"type": "Expression"
						},
						"param_Refined_Catalog_Name": {
							"value": "@pipeline().parameters.param_Refined_Catalog_Name",
							"type": "Expression"
						},
						"param_Refined_Schema_Name": {
							"value": "@pipeline().parameters.param_Refined_Schema_Name",
							"type": "Expression"
						},
						"param_CDA_Catalog_Name": {
							"value": "@pipeline().parameters.param_CDA_Catalog_Name",
							"type": "Expression"
						},
						"param_CDA_Schema_Name": {
							"value": "@pipeline().parameters.param_CDA_Schema_Name",
							"type": "Expression"
						},
						"param_storage_account_name": {
							"value": "@pipeline().parameters.param_storage_account_name",
							"type": "Expression"
						},
						"param_query_container_name": {
							"value": "@pipeline().parameters.param_query_container_name",
							"type": "Expression"
						},
						"param_csv_container_name": {
							"value": "@pipeline().parameters.param_csv_container_name",
							"type": "Expression"
						}
					}
				}
			},
			{
				"name": "dbx_Start_PL_MA_Audit_Log",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
					"baseParameters": {
						"batch_id": {
							"value": "@pipeline().parameters.param_Batch_ID",
							"type": "Expression"
						},
						"in_pl_audit_id": " ",
						"pl_activity_name": {
							"value": "@variables('var_MA_Activity_Name')",
							"type": "Expression"
						},
						"pl_comments": " ",
						"pl_log_state": {
							"value": "@variables('var_PL_Log_State_Ins')",
							"type": "Expression"
						},
						"pl_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"pl_status": {
							"value": "@variables('var_PL_Log_Status_InProgress')",
							"type": "Expression"
						},
						"Catalog_Name": {
							"value": "@pipeline().parameters.param_Refined_Catalog_Name",
							"type": "Expression"
						},
						"Schema_Name": {
							"value": "@pipeline().parameters.param_Refined_Schema_Name",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "claims_data_extraction",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "if_Prev_Feature_MA_PL_Complete",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "dbx_Start_PL_MA_Audit_Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('dbx_Start_PL_MA_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "epl_ext_feature_ma",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_ext_feature_mailingaddress",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"param_Batch_ID": {
										"value": "@pipeline().parameters.param_Batch_ID",
										"type": "Expression"
									},
									"param_PL_Audit_ID": {
										"value": "@activity('dbx_Start_PL_MA_Audit_Log').output.runOutput.pl_audit_id",
										"type": "Expression"
									},
									"param_CDA_Catalog_Name": {
										"value": "@pipeline().parameters.param_CDA_Catalog_Name",
										"type": "Expression"
									},
									"param_CDA_Schema_Name": {
										"value": "@pipeline().parameters.param_CDA_Schema_Name",
										"type": "Expression"
									},
									"param_Refined_Catalog_Name": {
										"value": "@pipeline().parameters.param_Refined_Catalog_Name",
										"type": "Expression"
									},
									"param_Refined_Schema_Name": {
										"value": "@pipeline().parameters.param_Refined_Schema_Name",
										"type": "Expression"
									},
									"param_query_container_name": {
										"value": "@pipeline().parameters.param_query_container_name",
										"type": "Expression"
									},
									"param_storage_account_name": {
										"value": "@pipeline().parameters.param_storage_account_name",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "dbx_End_PL_MA_Audit_Log_S",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "epl_ext_feature_ma",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
								"baseParameters": {
									"batch_id": {
										"value": "@pipeline().parameters.param_Batch_ID",
										"type": "Expression"
									},
									"in_pl_audit_id": {
										"value": "@string(activity('dbx_Start_PL_MA_Audit_Log').output.runOutput.pl_audit_id)",
										"type": "Expression"
									},
									"pl_activity_name": {
										"value": "@variables('var_MA_Activity_Name')",
										"type": "Expression"
									},
									"pl_comments": " ",
									"pl_log_state": {
										"value": "@variables('var_PL_Log_State_Upd')",
										"type": "Expression"
									},
									"pl_name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"pl_status": {
										"value": "@variables('var_PL_Status_Success')",
										"type": "Expression"
									},
									"Catalog_Name": {
										"value": "@pipeline().parameters.param_Refined_Catalog_Name",
										"type": "Expression"
									},
									"Schema_Name": {
										"value": "@pipeline().parameters.param_Refined_Schema_Name",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "claims_data_extraction",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "dbx_End_PL_MA_Audit_Log_F",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "epl_ext_feature_ma",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
								"baseParameters": {
									"batch_id": {
										"value": "@pipeline().parameters.param_Batch_ID",
										"type": "Expression"
									},
									"in_pl_audit_id": {
										"value": "@string(activity('dbx_Start_PL_MA_Audit_Log').output.runOutput.pl_audit_id)",
										"type": "Expression"
									},
									"pl_activity_name": {
										"value": "@variables('var_MA_Activity_Name')",
										"type": "Expression"
									},
									"pl_comments": {
										"value": "@activity('epl_ext_feature_ma').Error.Message",
										"type": "Expression"
									},
									"pl_log_state": {
										"value": "@variables('var_PL_Log_State_Upd')",
										"type": "Expression"
									},
									"pl_name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"pl_status": {
										"value": "@variables('var_PL_Status_Failure')",
										"type": "Expression"
									},
									"Catalog_Name": {
										"value": "@pipeline().parameters.param_Refined_Catalog_Name",
										"type": "Expression"
									},
									"Schema_Name": {
										"value": "@pipeline().parameters.param_Refined_Schema_Name",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "claims_data_extraction",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "dbx_Feature_Sent_To_CSV_Updates",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "epl_ext_feature_csv_master",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
					"baseParameters": {
						"Query": "UPDATE STG_EXT_Feature SET Sent_To_CSV = 1 WHERE Sent_To_CSV = 0;",
						"Schema_Name": {
							"value": "@pipeline().parameters.param_Refined_Schema_Name",
							"type": "Expression"
						},
						"Catalog_Name": {
							"value": "@pipeline().parameters.param_Refined_Catalog_Name",
							"type": "Expression"
						},
						"Parameters_List": " "
					}
				},
				"linkedServiceName": {
					"referenceName": "claims_data_extraction",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "dbx_Feature_MA_Sent_To_CSV_Updates",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "dbx_Feature_Sent_To_CSV_Updates",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
					"baseParameters": {
						"Query": "UPDATE STG_EXT_Feature_MailingAddress\nSET Sent_To_CSV = 1 WHERE Sent_To_CSV = 0;",
						"Schema_Name": {
							"value": "@pipeline().parameters.param_Refined_Schema_Name",
							"type": "Expression"
						},
						"Catalog_Name": {
							"value": "@pipeline().parameters.param_Refined_Catalog_Name",
							"type": "Expression"
						},
						"Parameters_List": " "
					}
				},
				"linkedServiceName": {
					"referenceName": "claims_data_extraction",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "dbx_Start_PL_Phones_Audit_Log",
				"type": "DatabricksNotebook",
				"dependsOn": [],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
					"baseParameters": {
						"batch_id": {
							"value": "@pipeline().parameters.param_Batch_ID",
							"type": "Expression"
						},
						"in_pl_audit_id": " ",
						"pl_activity_name": {
							"value": "@variables('var_Phones_Activity_Name')",
							"type": "Expression"
						},
						"pl_comments": " ",
						"pl_log_state": {
							"value": "@variables('var_PL_Log_State_Ins')",
							"type": "Expression"
						},
						"pl_name": {
							"value": "@pipeline().Pipeline",
							"type": "Expression"
						},
						"pl_status": {
							"value": "@variables('var_PL_Log_Status_InProgress')",
							"type": "Expression"
						},
						"Catalog_Name": {
							"value": "@pipeline().parameters.param_Refined_Catalog_Name",
							"type": "Expression"
						},
						"Schema_Name": {
							"value": "@pipeline().parameters.param_Refined_Schema_Name",
							"type": "Expression"
						}
					}
				},
				"linkedServiceName": {
					"referenceName": "claims_data_extraction",
					"type": "LinkedServiceReference"
				}
			},
			{
				"name": "if_Prev_Feature_Phones_PL_Complete",
				"type": "IfCondition",
				"dependsOn": [
					{
						"activity": "dbx_Start_PL_Phones_Audit_Log",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"userProperties": [],
				"typeProperties": {
					"expression": {
						"value": "@equals(activity('dbx_Start_PL_Phones_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
						"type": "Expression"
					},
					"ifFalseActivities": [
						{
							"name": "epl_ext_feature_phones",
							"type": "ExecutePipeline",
							"dependsOn": [],
							"policy": {
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"pipeline": {
									"referenceName": "pl_ext_feature_phones",
									"type": "PipelineReference"
								},
								"waitOnCompletion": true,
								"parameters": {
									"param_Batch_ID": {
										"value": "@pipeline().parameters.param_Batch_ID",
										"type": "Expression"
									},
									"param_PL_Audit_ID": {
										"value": "@activity('dbx_Start_PL_Phones_Audit_Log').output.runOutput.pl_audit_id",
										"type": "Expression"
									},
									"param_CDA_Catalog_Name": {
										"value": "@pipeline().parameters.param_CDA_Catalog_Name",
										"type": "Expression"
									},
									"param_CDA_Schema_Name": {
										"value": "@pipeline().parameters.param_CDA_Schema_Name",
										"type": "Expression"
									},
									"param_Refined_Catalog_Name": {
										"value": "@pipeline().parameters.param_Refined_Catalog_Name",
										"type": "Expression"
									},
									"param_Refined_Schema_Name": {
										"value": "@pipeline().parameters.param_Refined_Schema_Name",
										"type": "Expression"
									},
									"param_query_container_name": {
										"value": "@pipeline().parameters.param_query_container_name",
										"type": "Expression"
									},
									"param_storage_account_name": {
										"value": "@pipeline().parameters.param_storage_account_name",
										"type": "Expression"
									}
								}
							}
						},
						{
							"name": "dbx_End_PL_Phones_Audit_Log_S",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "epl_ext_feature_phones",
									"dependencyConditions": [
										"Succeeded"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
								"baseParameters": {
									"batch_id": {
										"value": "@pipeline().parameters.param_Batch_ID",
										"type": "Expression"
									},
									"in_pl_audit_id": {
										"value": "@string(activity('dbx_Start_PL_Phones_Audit_Log').output.runOutput.pl_audit_id)",
										"type": "Expression"
									},
									"pl_activity_name": {
										"value": "@variables('var_Phones_Activity_Name')",
										"type": "Expression"
									},
									"pl_comments": " ",
									"pl_log_state": {
										"value": "@variables('var_PL_Log_State_Upd')",
										"type": "Expression"
									},
									"pl_name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"pl_status": {
										"value": "@variables('var_PL_Status_Success')",
										"type": "Expression"
									},
									"Catalog_Name": {
										"value": "@pipeline().parameters.param_Refined_Catalog_Name",
										"type": "Expression"
									},
									"Schema_Name": {
										"value": "@pipeline().parameters.param_Refined_Schema_Name",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "claims_data_extraction",
								"type": "LinkedServiceReference"
							}
						},
						{
							"name": "dbx_End_PL_Phones_Audit_Log_F",
							"type": "DatabricksNotebook",
							"dependsOn": [
								{
									"activity": "epl_ext_feature_phones",
									"dependencyConditions": [
										"Failed"
									]
								}
							],
							"policy": {
								"timeout": "0.12:00:00",
								"retry": 0,
								"retryIntervalInSeconds": 30,
								"secureOutput": false,
								"secureInput": false
							},
							"userProperties": [],
							"typeProperties": {
								"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
								"baseParameters": {
									"batch_id": {
										"value": "@pipeline().parameters.param_Batch_ID",
										"type": "Expression"
									},
									"in_pl_audit_id": {
										"value": "@string(activity('dbx_Start_PL_Phones_Audit_Log').output.runOutput.pl_audit_id)",
										"type": "Expression"
									},
									"pl_activity_name": {
										"value": "@variables('var_Phones_Activity_Name')",
										"type": "Expression"
									},
									"pl_comments": {
										"value": "@activity('epl_ext_feature_phones').Error.Message",
										"type": "Expression"
									},
									"pl_log_state": {
										"value": "@variables('var_PL_Log_State_Upd')",
										"type": "Expression"
									},
									"pl_name": {
										"value": "@pipeline().Pipeline",
										"type": "Expression"
									},
									"pl_status": {
										"value": "@variables('var_PL_Status_Failure')",
										"type": "Expression"
									},
									"Catalog_Name": {
										"value": "@pipeline().parameters.param_Refined_Catalog_Name",
										"type": "Expression"
									},
									"Schema_Name": {
										"value": "@pipeline().parameters.param_Refined_Schema_Name",
										"type": "Expression"
									}
								}
							},
							"linkedServiceName": {
								"referenceName": "claims_data_extraction",
								"type": "LinkedServiceReference"
							}
						}
					]
				}
			},
			{
				"name": "dbx_Feature_Phones_Sent_To_CSV_Updates",
				"type": "DatabricksNotebook",
				"dependsOn": [
					{
						"activity": "dbx_Feature_MA_Sent_To_CSV_Updates",
						"dependencyConditions": [
							"Succeeded"
						]
					}
				],
				"policy": {
					"timeout": "0.12:00:00",
					"retry": 0,
					"retryIntervalInSeconds": 30,
					"secureOutput": false,
					"secureInput": false
				},
				"userProperties": [],
				"typeProperties": {
					"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
					"baseParameters": {
						"Query": "UPDATE STG_EXT_Feature_Phones\nSET Sent_To_CSV = 1 WHERE Sent_To_CSV = 0;",
						"Schema_Name": {
							"value": "@pipeline().parameters.param_Refined_Schema_Name",
							"type": "Expression"
						},
						"Catalog_Name": {
							"value": "@pipeline().parameters.param_Refined_Catalog_Name",
							"type": "Expression"
						},
						"Parameters_List": " "
					}
				},
				"linkedServiceName": {
					"referenceName": "claims_data_extraction",
					"type": "LinkedServiceReference"
				}
			}
		],
		"parameters": {
			"param_Batch_ID": {
				"type": "string"
			},
			"param_MDO_FolderName": {
				"type": "string"
			},
			"param_CDA_Catalog_Name": {
				"type": "string"
			},
			"param_Refined_Catalog_Name": {
				"type": "string"
			},
			"param_Refined_Schema_Name": {
				"type": "string"
			},
			"param_CDA_Schema_Name": {
				"type": "string"
			},
			"param_csv_container_name": {
				"type": "string"
			},
			"param_storage_account_name": {
				"type": "string"
			},
			"param_query_container_name": {
				"type": "string"
			}
		},
		"variables": {
			"var_Activity_Name": {
				"type": "String",
				"defaultValue": "Exposure_Extract"
			},
			"var_PL_Log_State_Ins": {
				"type": "String",
				"defaultValue": "ins"
			},
			"var_PL_Log_Status_InProgress": {
				"type": "String",
				"defaultValue": "In-Progress"
			},
			"var_PL_Log_State_Upd": {
				"type": "String",
				"defaultValue": "upd"
			},
			"var_PL_Status_Success": {
				"type": "String",
				"defaultValue": "Success"
			},
			"var_PL_Status_Failure": {
				"type": "String",
				"defaultValue": "Failed"
			},
			"var_MA_Activity_Name": {
				"type": "String",
				"defaultValue": "Exposure_MailingAddress_Extract"
			},
			"var_Phones_Activity_Name": {
				"type": "String",
				"defaultValue": "Exposure_Phones_Extract"
			}
		},
		"folder": {
			"name": "Claims Extract"
		},
		"annotations": [],
		"lastPublishTime": "2024-05-10T04:32:46Z"
	},
	"type": "Microsoft.DataFactory/factories/pipelines"
}