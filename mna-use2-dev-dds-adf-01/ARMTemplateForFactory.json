{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mna-use2-dev-dds-adf-01"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks'"
		},
		"CDA_AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'CDA_AzureDatabricks'"
		},
		"claims_data_extraction_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'claims_data_extraction'"
		},
		"AzureBlobStorage_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'AzureBlobStorage'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mnause2devddsadls01.dfs.core.windows.net/"
		},
		"AzureDatabricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0227-095127-mm0bihzy"
		},
		"CDA_AzureBlobStorage_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'CDA_AzureBlobStorage'"
		},
		"CDA_AzureDatabricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0522-063449-xazmzggb"
		},
		"claims_data_extraction_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0430-191614-k5iu0hhh"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Intiate_Batch",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"create_batch",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "execute policy_load",
						"description": "Loading for Policy Subject Area",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION_JOB Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Close_Batch",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_e2_policy_coverage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"close_batch",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"@activity('adf_pl_params').output.value[2].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/4977be7f_849e_4852_80e6_c61771709ca5/industryclouddatapipeline-0.0.7-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Load Initiation",
						"description": "Policy version identification",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "Intiate_Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"E2E",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_VERSION",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_ACTION_JOB Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "Load Initiation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_ACTION_JOB",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "execute policy_lob load",
						"description": "Loading for Policy Line Of Business Subject Area",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_risk_unit_load",
						"description": "Loading for Policy Risk Unit Subject Area",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_lob load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "adf_pl_e2_policy_coverage",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "execute policy_risk_unit_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_covergae_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_load')]",
				"[concat(variables('factoryId'), '/datasets/job_params')]",
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_lob_load')]",
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_risk_unit_load')]",
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_covergae_load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_coverage_refined_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "LOB_LOCATION Refined load",
						"description": "LOB_LOCATION",
						"type": "DatabricksSparkPython",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"LOB_LOCATION",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/job_params')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_coverage_stg_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/job_params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_covergae_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_coverage_stg_load",
						"description": "Loading the stage tables under POLICY COVERAGE\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_coverage_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_coverage_refined_load",
						"description": "Loading the Refined Tables under POLICY COVERAGE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_coverage_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_coverage_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_coverage_stg_load')]",
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_coverage_refined_load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_lob_stg_load",
						"description": "Loading the stage tables under Policy_Risk_Unit\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_risk_unit_refined_load",
						"description": "Loading the Refined Tables under Policy_Risk_Unit",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_lob_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_stg_load')]",
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_refined_load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_lob_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_lob_unit_stg_load",
						"description": "Loading the stage tables under Policy_Lob\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_lob_refined_load",
						"description": "Loading the Refined Tables under Policy_Lob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_lob_unit_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_lob_stg_load')]",
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_lob_refined_load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_lob_refined_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "POLICY_LOB Refined load",
						"description": "policy_lob",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_LOB",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_LOB_SEGMENT Refined load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "LOB_SEGMENT_ATTRIBUTE Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_LOB_SEGMENT",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_SEGMENT_ATTRIBUTE Refined load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_LOB Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"LOB_SEGMENT_ATTRIBUTE",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/job_params')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_lob_stg_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "POLICY_LOB Stage load",
						"description": "policy_lob",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_LOB",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_LOB_SEGMENT Stage load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "LOB_SEGMENT_ATTRIBUTE Stage loa",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_LOB_SEGMENT",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_SEGMENT_ATTRIBUTE Stage loa",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_LOB Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"LOB_SEGMENT_ATTRIBUTE",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/job_params')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_refined_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "POLICY_ACTION Refined load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION_JOB Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_ACTION",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_ADA Refined load",
						"description": "policy_additional_attribute\n",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_ADDITIONAL_ATTRIBUTE",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PARTY Refined load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"PARTY",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_FORM Refined load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_SEGMENT_A Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"POLICY_FORM",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_SEGMENT Refined load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_SEGMENT_A Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"POLICY_SEGMENT",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_SEGMENT_A Refined load",
						"description": "policy_segment_attribute",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_SEGMENT_ATTRIBUTE",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PARTY_ADDRESS Refinedload",
						"description": "party_address",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_SEGMENT_A Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"PARTY_ADDRESS",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_NONPREMIUM Refined load",
						"description": "policy_nonpremium",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_SEGMENT Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"POLICY_NONPREMIUM",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_NONPREMIUM_TRANSACTION Refined load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_SEGMENT Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_NONPREMIUM_TRANSACTION",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_ACTION_JOB Refined load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_ACTION_JOB",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/datasets/job_params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_risk_unit_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_risk_unit_stg_load",
						"description": "Loading the stage tables under Policy_Risk_Unit\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_risk_unit_refined_load",
						"description": "Loading the Refined Tables under Policy_Risk_Unit",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_risk_unit_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_risk_unit_stg_load')]",
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_risk_unit_refined_load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_risk_unit_refined_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "POLICY_LOB_RISK_UNIT Refined load",
						"description": "policy_lob_risk_unit",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"POLICY_LOB_RISK_UNIT",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_LOB_RISK_UNIT_SEGMENT Refined load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_LOB_RISK_UNIT Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_LOB_RISK_UNIT_SEGMENT",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_RISK_UNIT_SEGMENT_ATTRIBUTE refined load",
						"description": "LOB_RISK_UNIT_SEGMENT_ATTRIBUTE",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "LOB_LOCATION refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"LOB_RISK_UNIT_SEGMENT_ATTRIBUTE",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_RISK_UNIT_ADDITIONAL_ATTRIBUTE refined load",
						"description": "LOB_RISK_UNIT_ADDITIONAL_ATTRIBUTE",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "LOB_RISK_UNIT_SEGMENT_ATTRIBUTE refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"LOB_LOCATION",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_LOCATION refined load",
						"description": "lob_location",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_LOB_RISK_UNIT_SEGMENT Refined load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"LOB_LOCATION",
								"stage to refined",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/job_params')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_risk_unit_stg_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "POLICY_LOB_RISK_UNIT Stage",
						"description": "policy_lob_risk_unit",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_LOB_RISK_UNIT",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_LOB_RISK_UNIT_SEGMENT Stage load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_LOB_RISK_UNIT Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_LOB_RISK_UNIT_SEGMENT",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_RISK_UNIT_SEGMENT_ATTRIBUTE Stage load",
						"description": "LOB_RISK_UNIT_SEGMENT_ATTRIBUTE",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "LOB_LOCATION Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"LOB_RISK_UNIT_SEGMENT_ATTRIBUTE",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_RISK_UNIT_ADDITIONAL_ATTRIBUTE Stage load",
						"description": "LOB_RISK_UNIT_ADDITIONAL_ATTRIBUTE",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "LOB_RISK_UNIT_SEGMENT_ATTRIBUTE Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"LOB_LOCATION",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_LOCATION Stage load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_LOB_RISK_UNIT_SEGMENT Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"LOB_LOCATION",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/job_params')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_stg_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "POLICY_ACTION Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_ACTION",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/c4cdda1d_b2cf_4c19_98fc_61bbb6e7d1e2/industryclouddatapipeline-0.1.4-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_ADA Stage load",
						"description": "policy_additional_attribute\n",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"POLICY_ADDITIONAL_ATTRIBUTE",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/c4cdda1d_b2cf_4c19_98fc_61bbb6e7d1e2/industryclouddatapipeline-0.1.4-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PARTY Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"PARTY",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/c4cdda1d_b2cf_4c19_98fc_61bbb6e7d1e2/industryclouddatapipeline-0.1.4-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_FORM Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_SEGMENT_A Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"POLICY_FORM",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/c4cdda1d_b2cf_4c19_98fc_61bbb6e7d1e2/industryclouddatapipeline-0.1.4-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_SEGMENT Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_SEGMENT_A Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"POLICY_SEGMENT",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/c4cdda1d_b2cf_4c19_98fc_61bbb6e7d1e2/industryclouddatapipeline-0.1.4-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_SEGMENT_A Stage load",
						"description": "policy_segment_attribute",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"POLICY_SEGMENT_ATTRIBUTE",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/c4cdda1d_b2cf_4c19_98fc_61bbb6e7d1e2/industryclouddatapipeline-0.1.4-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "PARTY_ADDRESS Stage load",
						"description": "party_address",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_SEGMENT_A Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"dev_dds_edl_refined.audit",
								"PARTY_ADDRESS",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/c4cdda1d_b2cf_4c19_98fc_61bbb6e7d1e2/industryclouddatapipeline-0.1.4-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_NONPREMIUM Stage load",
						"description": "policy_nonpremium",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_SEGMENT Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_NONPREMIUM",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/c4cdda1d_b2cf_4c19_98fc_61bbb6e7d1e2/industryclouddatapipeline-0.1.4-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_NONPREMIUM_TRANSACTION Stage load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_SEGMENT Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_NONPREMIUM_TRANSACTION",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/c4cdda1d_b2cf_4c19_98fc_61bbb6e7d1e2/industryclouddatapipeline-0.1.4-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_PREMIUM Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_PREMIUM",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/c4cdda1d_b2cf_4c19_98fc_61bbb6e7d1e2/industryclouddatapipeline-0.1.4-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:08Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/datasets/job_params')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gw_adf_data_recon_unity_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_gw_adf_pl_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dynamic_param_unity",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.TriggerParam, variables('slash'), variables('gw_adf_pl_config'))",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "data_reconciliation",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "get_gw_adf_pl_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/adf_setup.py",
							"parameters": [
								"data_reconciliation_parallel",
								"@activity('get_gw_adf_pl_config').output.value[2].param_value",
								"@activity('get_gw_adf_pl_config').output.value[0].param_value",
								"@activity('get_gw_adf_pl_config').output.value[4].param_value",
								"@activity('get_gw_adf_pl_config').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/5610c152_daa6_4f11_9fb9_0fe1919dfd59/cdaaccelerator-0.0.1-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "CDA_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TriggerParam": {
						"type": "string"
					}
				},
				"variables": {
					"slash": {
						"type": "String",
						"defaultValue": "/"
					},
					"gw_adf_pl_config": {
						"type": "String",
						"defaultValue": "gw_adf_pl_config.csv"
					}
				},
				"folder": {
					"name": "CDA"
				},
				"annotations": [],
				"lastPublishTime": "2024-02-01T13:26:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/dynamic_param_unity')]",
				"[concat(variables('factoryId'), '/linkedServices/CDA_AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gw_adf_dp_process_node_unity_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachBusinessCenter",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_dp_node_process_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_dp_node_process_params').output.value",
								"type": "Expression"
							},
							"batchCount": 12,
							"activities": [
								{
									"name": "dp_node_process",
									"type": "DatabricksSparkPython",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pythonFile": "dbfs:/FileStore/adf_setup.py",
										"parameters": [
											"db_process_node",
											"@item().node_list",
											"@item().table_name",
											"@item().fingerprint_id",
											"@item().gw_center",
											"@item().is_synapse"
										],
										"libraries": [
											{
												"whl": "dbfs:/FileStore/jars/5610c152_daa6_4f11_9fb9_0fe1919dfd59/cdaaccelerator-0.0.1-py3-none-any.whl"
											}
										]
									},
									"linkedServiceName": {
										"referenceName": "CDA_AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "get_dp_node_process_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Dp_process_node_unity",
								"type": "DatasetReference",
								"parameters": {
									"dp_processFileName": {
										"value": "@concat(pipeline().parameters.GwcenterName, variables('slash'), variables('dp_process_node_file_path'))",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"GwcenterName": {
						"type": "string"
					}
				},
				"variables": {
					"slash": {
						"type": "String",
						"defaultValue": "/"
					},
					"dp_process_node_file_path": {
						"type": "String",
						"defaultValue": "gw_adf_pl_dp_process_node_config.csv"
					},
					"gw_adf_job_parameters": {
						"type": "String",
						"defaultValue": "gw_adf_job_parameters"
					}
				},
				"folder": {
					"name": "CDA"
				},
				"annotations": [],
				"lastPublishTime": "2024-02-02T11:40:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/Dp_process_node_unity')]",
				"[concat(variables('factoryId'), '/linkedServices/CDA_AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gw_adf_master_unity_data_init_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "db_process_node",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "data_init",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "gw_adf_dp_process_node_unity_trigger",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GwcenterName": {
									"value": "@pipeline().parameters.TriggerParam",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "data_init",
						"description": "",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "generate_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/adf_setup.py",
							"parameters": [
								"data_initialization",
								"@activity('get_gw_adf_pl_config').output.value[2].param_value",
								"@activity('get_gw_adf_pl_config').output.value[0].param_value",
								"@activity('get_gw_adf_pl_config').output.value[3].param_value",
								"@activity('get_gw_adf_pl_config').output.value[5].param_value",
								"@activity('get_gw_adf_pl_config').output.value[6].param_value",
								"@activity('get_gw_adf_pl_config').output.value[1].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/5610c152_daa6_4f11_9fb9_0fe1919dfd59/cdaaccelerator-0.0.1-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "CDA_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get_gw_adf_pl_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dynamic_param_unity",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.TriggerParam, variables('slash'), variables('gw_adf_pl_config'))",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "data_reconciliation",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "db_process_node",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/adf_setup.py",
							"parameters": [
								"data_reconciliation_parallel",
								"@activity('get_gw_adf_pl_config').output.value[2].param_value",
								"@activity('get_gw_adf_pl_config').output.value[0].param_value",
								"@activity('get_gw_adf_pl_config').output.value[4].param_value",
								"@activity('get_gw_adf_pl_config').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/5610c152_daa6_4f11_9fb9_0fe1919dfd59/cdaaccelerator-0.0.1-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "CDA_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "generate_config",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "get_gw_adf_pl_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/adf_setup.py",
							"parameters": [
								"generate_config",
								"@activity('get_gw_adf_pl_config').output.value[2].param_value",
								"@activity('get_gw_adf_pl_config').output.value[0].param_value",
								"@activity('get_gw_adf_pl_config').output.value[1].param_value",
								"@activity('get_gw_adf_pl_config').output.value[5].param_value",
								"@activity('get_gw_adf_pl_config').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/5610c152_daa6_4f11_9fb9_0fe1919dfd59/cdaaccelerator-0.0.1-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "CDA_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TriggerParam": {
						"type": "string"
					}
				},
				"variables": {
					"slash": {
						"type": "String",
						"defaultValue": "/"
					},
					"gw_adf_pl_config": {
						"type": "String",
						"defaultValue": "gw_adf_pl_config.csv"
					}
				},
				"folder": {
					"name": "CDA"
				},
				"annotations": [],
				"lastPublishTime": "2024-02-02T11:40:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/gw_adf_dp_process_node_unity_trigger')]",
				"[concat(variables('factoryId'), '/linkedServices/CDA_AzureDatabricks')]",
				"[concat(variables('factoryId'), '/datasets/dynamic_param_unity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/gw_adf_unity_config_generator_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "generate_config",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "get_gw_adf_pl_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/adf_setup.py",
							"parameters": [
								"generate_config",
								"@activity('get_gw_adf_pl_config').output.value[2].param_value",
								"@activity('get_gw_adf_pl_config').output.value[0].param_value",
								"@activity('get_gw_adf_pl_config').output.value[1].param_value",
								"@activity('get_gw_adf_pl_config').output.value[5].param_value",
								"@activity('get_gw_adf_pl_config').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/5610c152_daa6_4f11_9fb9_0fe1919dfd59/cdaaccelerator-0.0.1-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "CDA_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get_gw_adf_pl_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dynamic_param_unity",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.TriggerParam, variables('slash'), variables('gw_adf_pl_config'))",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TriggerParam": {
						"type": "string"
					}
				},
				"variables": {
					"slash": {
						"type": "String",
						"defaultValue": "/"
					},
					"gw_adf_pl_config": {
						"type": "String",
						"defaultValue": "gw_adf_pl_config.csv"
					}
				},
				"folder": {
					"name": "CDA"
				},
				"annotations": [],
				"lastPublishTime": "2024-02-01T13:26:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CDA_AzureDatabricks')]",
				"[concat(variables('factoryId'), '/datasets/dynamic_param_unity')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_all_extracts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "epl_Extract_SecondaryExaminer_Master",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_secondaryexaminer_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_Extract_PrimaryExaminer_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_primaryexaminer_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_Extract_Reserve_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_reserve_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T10:21:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ext_secondaryexaminer_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_primaryexaminer_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_reserve_master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "epl_ext_all_extracts",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "dbx_Start_Batch_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dbx_Get_MDO_FolderName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_all_extracts",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@string(activity('dbx_Start_Batch_Log').output.runOutput)",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@activity('dbx_Get_MDO_FolderName').output.runOutput",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@variables('var_CDA_Catalog_Name')",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@variables('var_Refined_Catalog_Name')",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@variables('var_Refined_Schema_Name')",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@variables('var_CDA_Schema_Name')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "dbx_Start_Batch_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Batch_Log",
							"baseParameters": {
								"batch_comments": " ",
								"batch_log_state": {
									"value": "@variables('var_Batch_Log_State_Ins')",
									"type": "Expression"
								},
								"batch_name": {
									"value": "@variables('var_Batch_Name')",
									"type": "Expression"
								},
								"batch_status": {
									"value": "@variables('var_Batch_Status_InProgress')",
									"type": "Expression"
								},
								"refined_catalog_name": {
									"value": "@variables('var_Refined_Catalog_Name')",
									"type": "Expression"
								},
								"refined_schema_name": {
									"value": "@variables('var_Refined_Schema_Name')",
									"type": "Expression"
								},
								"in_batch_id": " ",
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Get_MDO_FolderName",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Config_Value FROM Master_Config\nWHERE Config_Key ={} AND Config_IsActive = {}",
								"Parameters_List": "'MDO_Folder_Name',1",
								"Schema_Name": {
									"value": "@variables('var_Refined_Schema_Name')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@variables('var_Refined_Catalog_Name')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_End_Batch_Log_S",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "epl_ext_all_extracts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Batch_Log",
							"baseParameters": {
								"batch_comments": " ",
								"batch_id": " ",
								"batch_log_state": {
									"value": "@variables('var_Batch_Log_State_Upd')",
									"type": "Expression"
								},
								"batch_name": {
									"value": "@variables('var_Batch_Name')",
									"type": "Expression"
								},
								"batch_status": {
									"value": "@variables('var_Batch_Status_Success')",
									"type": "Expression"
								},
								"refined_catalog_name": {
									"value": "@variables('var_Refined_Catalog_Name')",
									"type": "Expression"
								},
								"refined_schema_name": {
									"value": "@variables('var_Refined_Schema_Name')",
									"type": "Expression"
								},
								"in_batch_id": {
									"value": "@string(activity('dbx_Start_Batch_Log').output.runOutput)",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_End_Batch_Log_F",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "epl_ext_all_extracts",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Batch_Log",
							"baseParameters": {
								"batch_comments": {
									"value": "@activity('epl_ext_all_extracts').Error.Message",
									"type": "Expression"
								},
								"batch_id": " ",
								"batch_log_state": {
									"value": "@variables('var_Batch_Log_State_Upd')",
									"type": "Expression"
								},
								"batch_name": {
									"value": "@variables('var_Batch_Name')",
									"type": "Expression"
								},
								"batch_status": {
									"value": "@variables('var_Batch_Status_Failure')",
									"type": "Expression"
								},
								"refined_catalog_name": {
									"value": "@variables('var_Refined_Catalog_Name')",
									"type": "Expression"
								},
								"refined_schema_name": {
									"value": "@variables('var_Refined_Schema_Name')",
									"type": "Expression"
								},
								"in_batch_id": {
									"value": "@string(activity('dbx_Start_Batch_Log').output.runOutput)",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_Batch_ID": {
						"type": "Integer"
					},
					"var_Batch_Name": {
						"type": "String",
						"defaultValue": "CCM_Extracts"
					},
					"var_Batch_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_Batch_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_Batch_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_Batch_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_Batch_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_MDO_Drop_FolderName": {
						"type": "String"
					},
					"var_CDA_Catalog_Name": {
						"type": "String",
						"defaultValue": "dev_dds_edl_raw"
					},
					"var_Refined_Catalog_Name": {
						"type": "String",
						"defaultValue": "dev_dds_edl_refined"
					},
					"var_Refined_Schema_Name": {
						"type": "String",
						"defaultValue": "claims"
					},
					"var_CDA_Schema_Name": {
						"type": "String",
						"defaultValue": "claimscenter_dbo_dbo"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T17:42:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ext_all_extracts')]",
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_primary_status')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Get_Primary_Status_SrcQry",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Primary Status SPs/NB_Get_primary_status_SRC_Query",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_STG_Primary_Status_Upsert",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Gen_Hash_SRC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Primary Status SPs/NB_STG_primary_status_Upsert",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"PL_Audit_ID": {
									"value": "@string(pipeline().parameters.param_PL_Audit_ID)",
									"type": "Expression"
								},
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Load_SRC_EXT_Primary_Status",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Get_Primary_Status_SrcQry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Load_SRC_EXT",
							"baseParameters": {
								"Query": {
									"value": "@activity('dbx_Get_Primary_Status_SrcQry').output.runOutput",
									"type": "Expression"
								},
								"Table_Name": "src_ext_primarystatus",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Gen_Hash_SRC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Load_SRC_EXT_Primary_Status",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Gen_HashKey",
							"baseParameters": {
								"src_table": "SRC_EXT_PrimaryStatus",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_PL_Audit_ID": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Primary_Status_Src_Query": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T13:32:01Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_primary_status_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Primary_Status_FileName",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/dbx_Reserve_File_name"
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_copy_Primary_Status_CSV_to_mDo",
						"description": "",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "sv_Primary_Status_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_reserve_mdo_csv"
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Primary_Status_Inc_Log_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_copy_Primary_Status_CSV_to_mDo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Primary Status SPs/NB_usp_primary_status_Inc_Log_Updates"
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sv_Primary_Status_FileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "dbx_Primary_Status_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_Reserve_FileName",
							"value": {
								"value": "@pipeline().DataFactory",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_Reserve_FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T13:43:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_primaryexaminer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Get_PrimaryExaminer_SrcQry",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Primary Examiner SPs/NB_Get_Primary_Examiner_SRC_Query",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Load_SRC_EXT_PrimaryExaminer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Get_PrimaryExaminer_SrcQry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Load_SRC_EXT",
							"baseParameters": {
								"Query": {
									"value": "@activity('dbx_Get_PrimaryExaminer_SrcQry').output.runOutput",
									"type": "Expression"
								},
								"Table_Name": "src_ext_primaryexaminer",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Gen_Hash_SRC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Load_SRC_EXT_PrimaryExaminer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Gen_HashKey",
							"baseParameters": {
								"src_table": "SRC_EXT_PrimaryExaminer",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_STG_PrimaryExaminer_Upsert",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Gen_Hash_SRC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Primary Examiner SPs/NB_STG_Primary_Examiner_Upsert",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"PL_Audit_ID": {
									"value": "@string(pipeline().parameters.param_PL_Audit_ID)",
									"type": "Expression"
								},
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_PL_Audit_ID": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T04:55:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_primaryexaminer_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_PrimaryExaminer_FileName",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Config_Value FROM Master_Config WHERE Config_Key ={} AND Config_IsActive = {}",
								"Parameters_List": " 'Primary_Examiner_File_Name',1",
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_copy_PrimaryExaminer_CSV_to_mDo",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "sv_Reserve_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_reserve_mdo_csv",
							"baseParameters": {
								"query": "SELECT  \n\tCAST(ClaimMessage_MessageID AS VARCHAR(255)) AS ClaimMessage_MessageID,\n\tClaimMessage_MessageType,\n\tClaimMessage_CCMVersion,\n\tClaimMessage_CCMSchemaName,\n\tClaimMessage_OriginatingSystemCode,\n\tClaim_ClaimFolderNumber,\n\tClaim_PolicyNumber,\n\tClaim_PrimaryClaimExaminerCode,\n\tCAST(DATE_FORMAT(Claim_AssignmentDate,'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'') AS VARCHAR(255)) AS Claim_AssignmentDate,\n\tClaim_ExaminerGroupCode,\n\t/* CAST(CONVERT(DATETIME2(0),RecCrtTs) AS VARCHAR(30)) AS RecordCreateTime */\n\tCAST(DATE_FORMAT(RecCrtTs, 'yyyy-MM-dd HH:mm:ss') AS VARCHAR(30)) AS RecordCreateTime\nFROM STG_EXT_PrimaryExaminer\nWHERE \nSent_To_CSV =0 and Is_current='Y'",
								"target": "STG_EXT_PrimaryExaminer",
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"file_name": {
									"value": "@concat(variables('var_PrimaryExaminer_FileName'),'_',pipeline().parameters.param_dbx_File_TimeStamp,'.csv')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_PrimaryExaminer_Inc_Log_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_copy_PrimaryExaminer_CSV_to_mDo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Primary Examiner SPs/NB_usp_Primary_Examiner_Inc_Log_Updates",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sv_Reserve_FileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "dbx_PrimaryExaminer_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_PrimaryExaminer_FileName",
							"value": {
								"value": "@if(equals(activity('dbx_PrimaryExaminer_FileName').output.runOutput, 'None'),'CCM_Folder_Primary_Examiner_Change_Daily',activity('dbx_PrimaryExaminer_FileName').output.runOutput)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_dbx_File_TimeStamp": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_PrimaryExaminer_FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T06:59:38Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_primaryexaminer_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Reserve_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primaryexaminer_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_primaryexaminer_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_primaryexaminer_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primaryexaminer_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_primaryexaminer_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "PrimaryExaminer_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T09:16:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_primaryexaminer_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_primaryexaminer_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Reserve_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_primaryexaminer",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_primaryexaminer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primaryexaminer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primaryexaminer",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_primaryexaminer').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_primaryexaminer_csv_master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_Reserve_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_primaryexaminer_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "PrimaryExaminer_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T04:32:46Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_primaryexaminer_csv_generation')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_primaryexaminer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_reserve')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Get_Reserve_SrcQry",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Reserve SPs/NB_Get_Reserve_SRC_Query",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Load_SRC_EXT_Reserve",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Get_Reserve_SrcQry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Load_SRC_EXT",
							"baseParameters": {
								"Query": {
									"value": "@activity('dbx_Get_Reserve_SrcQry').output.runOutput",
									"type": "Expression"
								},
								"Table_Name": "src_ext_reserve",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Gen_Hash_SRC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Load_SRC_EXT_Reserve",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Gen_HashKey",
							"baseParameters": {
								"src_table": "SRC_EXT_Reserve",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_STG_Reserve_Upsert",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Gen_Hash_SRC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Reserve SPs/NB_STG_Reserve_Upsert",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"PL_Audit_ID": {
									"value": "@string(pipeline().parameters.param_PL_Audit_ID)",
									"type": "Expression"
								},
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_PL_Audit_ID": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Reserve_Src_Query": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-09T14:21:56Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_reserve_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Reserve_FileName",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Config_Value FROM Master_Config WHERE Config_Key ={} AND Config_IsActive = {}",
								"Parameters_List": " 'Reserve_File_Name',1",
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_copy_Reserve_CSV_to_mDo",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "sv_Reserve_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_reserve_mdo_csv",
							"baseParameters": {
								"query": "SELECT\nCAST(ClaimMessage_MessageID AS VARCHAR(255)) AS ClaimMessage_MessageID,\nClaimMessage_MessageType,\nClaimMessage_CCMVersion,\nClaimMessage_CCMSchemaName,\nClaimMessage_OriginatingSystemCode,\nClaim_ReserveTransactionNumber,\nClaim_ReserveTransactionOriginatingSystemCode,\nClaim_ClaimFeatureNumber,\nClaim_PolicyNumber,\nCAST(Claim_ReserveTransactionSequenceNumber AS VARCHAR(255)) AS Claim_ReserveTransactionSequenceNumber,\n/* CAST(FORMAT(Reserve_EntryDate,'yyyy-MM-ddTHH:mm:ssZ') AS VARCHAR(255)) AS Reserve_EntryDate,\nCAST(CONVERT(DATE,Reserve_EffectiveDate) AS VARCHAR(255)) AS Reserve_EffectiveDate, */\nCAST(DATE_FORMAT(Reserve_EntryDate,'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'') AS VARCHAR(255)) AS Reserve_EntryDate,\nCAST(DATE_FORMAT(Reserve_EffectiveDate, 'yyyy-MM-dd') AS VARCHAR(255)) AS Reserve_EffectiveDate,\nDetails_CostTypeCode,\nDetails_CostCategoryCode,\nDetails_RecoveryTypeCode,\nCAST(Details_ReserveAmount AS VARCHAR(255)) AS Details_ReserveAmount ,\nDetails_CurrencyCode,\n/* CAST(CONVERT(DATETIME2(0),RecCrtTs) AS VARCHAR(30)) AS RecordCreateTime, */\nCAST(DATE_FORMAT(RecCrtTs, 'yyyy-MM-dd HH:mm:ss') AS VARCHAR(30)) AS RecordCreateTime,\nClaim_ClaimFolderNumber\nFROM STG_EXT_Reserve\nWHERE \nSent_To_CSV =0 and Is_current='Y'",
								"target": "STG_EXT_Reserve",
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"file_name": {
									"value": "@concat(variables('var_Reserve_FileName'),'_',pipeline().parameters.param_dbx_File_TimeStamp,'.csv')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Reserve_Inc_Log_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_copy_Reserve_CSV_to_mDo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Reserve SPs/NB_usp_Reserve_Inc_Log_Updates",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sv_Reserve_FileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "dbx_Reserve_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_Reserve_FileName",
							"value": {
								"value": "@if(equals(activity('dbx_Reserve_FileName').output.runOutput, 'None'),'CCM_Feature_Reserve_Log_Daily',activity('dbx_Reserve_FileName').output.runOutput)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_dbx_File_TimeStamp": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Reserve_FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-09T06:53:35Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_reserve_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Reserve_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_reserve_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_reserve_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_reserve_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_reserve_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_reserve_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Reserve_FileName": {
						"type": "String"
					},
					"var_PL_Audit_ID": {
						"type": "String"
					},
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Reserve_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_Prev_Reserve_Status_Complete": {
						"type": "String"
					},
					"var_CSV_File_TimeStamp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-09T14:01:04Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_reserve_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_reserve_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Reserve_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_reserve",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_reserve",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_reserve",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_reserve",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_reserve').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_reserve_csv_master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_Reserve_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_reserve_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Reserve_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_Reserve_FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-09T10:45:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_reserve_csv_generation')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_reserve')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_secondaryexaminer')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Get_Secondaryexaminer_SrcQry",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Secondary Examiner SPs/NB_Get_secondaryexaminer_SRC_Query",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Load_SRC_EXT_Secondaryexaminer",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Get_Secondaryexaminer_SrcQry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Load_SRC_EXT",
							"baseParameters": {
								"Query": {
									"value": "@activity('dbx_Get_Secondaryexaminer_SrcQry').output.runOutput",
									"type": "Expression"
								},
								"Table_Name": "src_ext_secondaryexaminer",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Gen_Hash_SRC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Load_SRC_EXT_Secondaryexaminer",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Gen_HashKey",
							"baseParameters": {
								"src_table": "SRC_EXT_SecondaryExaminer",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_STG_Secondaryexaminer_Upsert",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Gen_Hash_SRC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Secondary Examiner SPs/NB_STG_secondaryexaminer_Upsert",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"PL_Audit_ID": {
									"value": "@string(pipeline().parameters.param_PL_Audit_ID)",
									"type": "Expression"
								},
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_PL_Audit_ID": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T13:37:06Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_secondaryexaminer_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Secondaryexaminer_FileName",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Config_Value FROM Master_Config WHERE Config_Key ={} AND Config_IsActive = {}",
								"Parameters_List": " 'Secondary_Examiner_File_Name',1",
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_copy_Secondaryexaminer_CSV_to_mDo",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "sv_Secondaryexaminer_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_reserve_mdo_csv",
							"baseParameters": {
								"query": "SELECT  \n\tCAST(ClaimMessage_Message_ID AS VARCHAR(255)) AS ClaimMessage_MessageID,\n\tClaimMessage_MessageType,\n\tClaimMessage_CCMVersion,\n\tClaimMessage_CCMSchemaName,\n\tClaimMessage_OriginatingSystemCode,\n\tClaim_ClaimFolderNumber,\n\tClaim_PolicyNumber,\n\tClaim_SecondaryClaimExaminerCode,\n\tCAST(DATE_FORMAT(Claim_AssignmentDate,'yyyy-MM-dd\\'T\\'HH:mm:ss\\'Z\\'') AS VARCHAR(255)) AS Claim_AssignmentDate,\n\tClaim_ExaminerGroupCode,\n\t/* CAST(CONVERT(DATETIME2(0),RecCrtTs) AS VARCHAR(30)) AS RecordCreateTime */\n\tCAST(DATE_FORMAT(RecCrtTs, 'yyyy-MM-dd HH:mm:ss') AS VARCHAR(30)) AS RecordCreateTime\nFROM STG_EXT_SecondaryExaminer\nWHERE \nSent_To_CSV =0 and Is_current='Y'",
								"target": "STG_EXT_SecondaryExaminer",
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"file_name": {
									"value": "@concat(variables('var_SecondaryExaminer_FileName'),'_',pipeline().parameters.param_dbx_File_TimeStamp,'.csv')",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Secondaryexaminer_Inc_Log_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_copy_Secondaryexaminer_CSV_to_mDo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Secondary Examiner SPs/NB_usp_secondaryexaminer_Inc_Log_Updates",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sv_Secondaryexaminer_FileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "dbx_Secondaryexaminer_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_SecondaryExaminer_FileName",
							"value": {
								"value": "@if(equals(activity('dbx_Secondaryexaminer_FileName').output.runOutput, 'None'),'CCM_Folder_Secondary_Examiner_Change_Daily',activity('dbx_Secondaryexaminer_FileName').output.runOutput)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_dbx_File_TimeStamp": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_SecondaryExaminer_FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T16:40:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_secondaryexaminer_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Secondaryexaminer_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondaryexaminer_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondaryexaminer_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@variables('var_PL_Audit_ID')",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_secondaryexaminer_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_secondaryexaminer_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_secondaryexaminer_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "SecondaryExaminer_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_Prev_Reserve_Status_Complete": {
						"type": "String",
						"defaultValue": " "
					},
					"var_CSV_File_TimeStamp": {
						"type": "String",
						"defaultValue": " "
					},
					"var_Reserve_FileName": {
						"type": "String",
						"defaultValue": " "
					},
					"var_PL_Audit_ID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T07:57:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_secondaryexaminer_csv')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_secondaryexaminer_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "if_Prev_SecondaryExaminer_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_secondaryexaminer",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_secondaryexaminer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondaryexaminer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondaryexaminer",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "dbx_End_PL_Audit_Log_F",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_secondaryexaminer').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_secondaryexaminer_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_SecondaryExaminer_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_secondaryexaminer_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "SecondaryExaminer_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T09:16:42Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ext_secondaryexaminer_csv_generation')]",
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_secondaryexaminer')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/switch_activity_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "stage_table_list_lkp",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "DelimitedText1",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach_stage_table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "stage_table_list_lkp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('stage_table_list_lkp').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Switch1",
									"type": "Switch",
									"dependsOn": [],
									"userProperties": [],
									"typeProperties": {
										"on": {
											"value": "1",
											"type": "Expression"
										},
										"cases": [
											{
												"value": "Case1",
												"activities": [
													{
														"name": "stage_load",
														"type": "DatabricksSparkPython",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
															"parameters": [
																"stage_load",
																"CYBER_POLICY",
																"E2",
																"dev_dds_edl_refined.audit",
																"policy_action",
																"dev",
																"1"
															],
															"libraries": [
																{
																	"whl": ""
																}
															]
														},
														"linkedServiceName": {
															"referenceName": "AzureDatabricks",
															"type": "LinkedServiceReference"
														}
													}
												]
											},
											{
												"value": "Case2",
												"activities": [
													{
														"name": "refined_load",
														"type": "DatabricksSparkPython",
														"dependsOn": [],
														"policy": {
															"timeout": "0.12:00:00",
															"retry": 0,
															"retryIntervalInSeconds": 30,
															"secureOutput": false,
															"secureInput": false
														},
														"userProperties": [],
														"typeProperties": {
															"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
															"parameters": [
																"refined_load",
																"CYBER_POLICY",
																"E2",
																"dev_dds_edl_refined.audit",
																"policy_action_job",
																"dev",
																"2"
															],
															"libraries": [
																{
																	"whl": "dbfs:/FileStore/jars/fad1cfe8_8fa1_4565_8933_4c7f0246c26a/industryclouddatapipeline-0.1.4-py3-none-any.whl"
																}
															]
														},
														"linkedServiceName": {
															"referenceName": "AzureDatabricks",
															"type": "LinkedServiceReference"
														}
													}
												]
											}
										],
										"defaultActivities": [
											{
												"name": "E2E",
												"type": "DatabricksSparkPython",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
													"parameters": [
														"E2E",
														"CYBER_POLICY",
														"E2",
														"dev_dds_edl_refined.audit",
														"policy_action_job",
														"dev"
													],
													"libraries": [
														{
															"whl": "dbfs:/FileStore/jars/fad1cfe8_8fa1_4565_8933_4c7f0246c26a/industryclouddatapipeline-0.1.4-py3-none-any.whl"
														}
													]
												},
												"linkedServiceName": {
													"referenceName": "AzureDatabricks",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2024-04-17T15:53:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DelimitedText1')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DelimitedText1')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "adf_cyber_stage_table_list.txt",
						"container": "adf-cyber-metadata"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "policy_action_job",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Dp_process_node_unity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CDA_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"dp_processFileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().dp_processFileName",
							"type": "Expression"
						},
						"folderPath": "gw_adf_job_parameters",
						"container": "adf-cda-metadata"
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CDA_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/dynamic_param_unity')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "CDA_AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"FileName": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().FileName",
							"type": "Expression"
						},
						"folderPath": "gw_adf_job_parameters",
						"container": "adf-cda-metadata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/CDA_AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/job_params')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureBlobStorage",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "param.csv",
						"container": "adf-cyber-metadata"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "policy_action_job",
						"type": "String"
					}
				]
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/AzureBlobStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('AzureBlobStorage_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3012775336824955.15.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDA_AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('CDA_AzureBlobStorage_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDA_AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3012775336824955.15.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('CDA_AzureDatabricks_accessToken')]"
					},
					"existingClusterId": "[parameters('CDA_AzureDatabricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/claims_data_extraction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3012775336824955.15.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('claims_data_extraction_accessToken')]"
					},
					"existingClusterId": "[parameters('claims_data_extraction_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Tgr_Cyber_Policy_Stage_load')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Month",
					"interval": 1,
					"startTime": "2024-04-12T16:11:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 10,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": [
						{
							"type": "TumblingWindowTriggerDependencyReference",
							"offset": "0.00:11:00",
							"referenceTrigger": {
								"referenceName": "tgr_pl_cyber_policy_master",
								"type": "TriggerReference"
							}
						}
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/triggers/tgr_pl_cyber_policy_master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgr_pl_cyber_policy_master')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Month",
					"interval": 1,
					"startTime": "2024-04-12T16:22:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Databricks_Orchestration')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/bc5d5464-b9cd-48a2-a999-e83e40766e6d/resourcegroups/mna-use2-dev-rg-dds-01/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mna-use2-dev-dds-managedidentity-01"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls-creden')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/bc5d5464-b9cd-48a2-a999-e83e40766e6d/resourcegroups/mna-use2-dev-rg-dds-01/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mna-use2-dev-dds-managedidentity-01"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/user-mi-2')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/bc5d5464-b9cd-48a2-a999-e83e40766e6d/resourcegroups/mna-use2-dev-rg-dds-01/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mna-use2-dev-dds-managedidentity-01"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		}
	]
}