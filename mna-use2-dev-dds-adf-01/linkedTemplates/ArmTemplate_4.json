{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mna-use2-dev-dds-adf-01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_lob_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_lob_unit_stg_load",
						"description": "Loading the stage tables under Policy_Lob\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_lob_refined_load",
						"description": "Loading the Refined Tables under Policy_Lob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_lob_unit_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_CYBER"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_lob_load_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_lob_unit_stg_load",
						"description": "Loading the stage tables under Policy_Lob\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_lob_refined_load",
						"description": "Loading the Refined Tables under Policy_Lob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_lob_unit_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_Cyber_clone"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_risk_unit_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_risk_unit_stg_load",
						"description": "Loading the stage tables under Policy_Risk_Unit\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_risk_unit_refined_load",
						"description": "Loading the Refined Tables under Policy_Risk_Unit",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_risk_unit_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_CYBER"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_risk_unit_load_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_risk_unit_stg_load",
						"description": "Loading the stage tables under Policy_Risk_Unit\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_risk_unit_refined_load",
						"description": "Loading the Refined Tables under Policy_Risk_Unit",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_risk_unit_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_Cyber_clone"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/gw_adf_master_unity_data_init_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "db_process_node",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "data_init",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "gw_adf_dp_process_node_unity_trigger",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"GwcenterName": {
									"value": "@pipeline().parameters.TriggerParam",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "data_init",
						"description": "",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "generate_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/adf_setup.py",
							"parameters": [
								"data_initialization",
								"@activity('get_gw_adf_pl_config').output.value[2].param_value",
								"@activity('get_gw_adf_pl_config').output.value[0].param_value",
								"@activity('get_gw_adf_pl_config').output.value[3].param_value",
								"@activity('get_gw_adf_pl_config').output.value[5].param_value",
								"@activity('get_gw_adf_pl_config').output.value[6].param_value",
								"@activity('get_gw_adf_pl_config').output.value[1].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cdaaccelerator/cdaaccelerator-0.0.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "CDA_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get_gw_adf_pl_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dynamic_param_unity",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.TriggerParam, variables('slash'), variables('gw_adf_pl_config'))",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "data_reconciliation",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "db_process_node",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/adf_setup.py",
							"parameters": [
								"data_reconciliation_parallel",
								"@activity('get_gw_adf_pl_config').output.value[2].param_value",
								"@activity('get_gw_adf_pl_config').output.value[0].param_value",
								"@activity('get_gw_adf_pl_config').output.value[4].param_value",
								"@activity('get_gw_adf_pl_config').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/5610c152_daa6_4f11_9fb9_0fe1919dfd59/cdaaccelerator-0.0.1-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "CDA_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "generate_config",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "get_gw_adf_pl_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/adf_setup.py",
							"parameters": [
								"generate_config",
								"@activity('get_gw_adf_pl_config').output.value[2].param_value",
								"@activity('get_gw_adf_pl_config').output.value[0].param_value",
								"@activity('get_gw_adf_pl_config').output.value[1].param_value",
								"@activity('get_gw_adf_pl_config').output.value[5].param_value",
								"@activity('get_gw_adf_pl_config').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cdaaccelerator/cdaaccelerator-0.0.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "CDA_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TriggerParam": {
						"type": "string"
					}
				},
				"variables": {
					"slash": {
						"type": "String",
						"defaultValue": "/"
					},
					"gw_adf_pl_config": {
						"type": "String",
						"defaultValue": "gw_adf_pl_config.csv"
					}
				},
				"folder": {
					"name": "CDA"
				},
				"annotations": [],
				"lastPublishTime": "2024-02-02T11:40:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_feature_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Feature_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_feature",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_feature",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_feature').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_feature_csv_master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_Feature_MA_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "if_Prev_Feature_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "if_Prev_Feature_Phones_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_feature_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "dbx_Start_PL_MA_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_MA_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Feature_MA_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_MA_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_MA_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_feature_ma",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_feature_mailingaddress",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@string(activity('dbx_Start_PL_MA_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_MA_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature_ma",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_MA_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_MA_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_MA_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature_ma",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_MA_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_MA_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_feature_ma').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "dbx_Feature_Sent_To_CSV_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "epl_ext_feature_csv_master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "UPDATE STG_EXT_Feature SET Sent_To_CSV = 1 WHERE Sent_To_CSV = 0;",
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Parameters_List": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Feature_MA_Sent_To_CSV_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Feature_Sent_To_CSV_Updates",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "UPDATE STG_EXT_Feature_MailingAddress\nSET Sent_To_CSV = 1 WHERE Sent_To_CSV = 0;",
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Parameters_List": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_PL_Phones_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_Phones_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Feature_Phones_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Phones_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Phones_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_feature_phones",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_feature_phones",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@string(activity('dbx_Start_PL_Phones_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Phones_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature_phones",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Phones_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Phones_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Phones_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature_phones",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Phones_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Phones_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_feature_phones').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "dbx_Feature_Phones_Sent_To_CSV_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Feature_MA_Sent_To_CSV_Updates",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "UPDATE STG_EXT_Feature_Phones\nSET Sent_To_CSV = 1 WHERE Sent_To_CSV = 0;",
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Parameters_List": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Exposure_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_MA_Activity_Name": {
						"type": "String",
						"defaultValue": "Exposure_MailingAddress_Extract"
					},
					"var_Phones_Activity_Name": {
						"type": "String",
						"defaultValue": "Exposure_Phones_Extract"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T04:32:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_folder_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Folder_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_folder",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_folder",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_folder",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_folder",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_folder').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_folder_csv_master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_Folder_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_folder_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Folder_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T04:32:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_insured_payment_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_InsuredPayment_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_insured_payment",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_insured_payment",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_insured_payment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_insured_payment",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_insured_payment').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_insured_payment_csv_master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_InsuredPayment_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_insured_payment_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Insuredpayment_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_litigation_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_LSC_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_LSC_Activity_Name')",
									"type": "Expression"
								},
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"pl_comments": " ",
								"in_pl_audit_id": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"pl_comments": " ",
								"in_pl_audit_id": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Litigation_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_litigation",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_litigation",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_litigation",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"pl_comments": " "
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_litigation",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_litigation').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_litigation_csv_generation",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_Litigation_SecCounsel_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "if_Prev_Litigation_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "epl_ext_litigation_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "if_Prev_Litigation_SecCounsel_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_LSC_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_LSC_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_Litigation_SecCounsel",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_litigation_seccounsel",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@string(activity('dbx_Start_PL_LSC_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_LSC_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_Litigation_SecCounsel",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_LSC_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_LSC_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_LSC_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_Litigation_SecCounsel",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_LSC_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_LSC_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_Litigation_SecCounsel').output.Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "dbx_Litigation_Sent_To_CSV_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "epl_ext_litigation_csv_generation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "UPDATE STG_EXT_Litigation SET Sent_To_CSV = 1 WHERE Sent_To_CSV = 0;",
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Parameters_List": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Litigation_SecCounsel_Sent_To_CSV_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Litigation_Sent_To_CSV_Updates",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "UPDATE stg_ext_litigation_seccounsels SET Sent_To_CSV = 1 WHERE Sent_To_CSV = 0;",
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Parameters_List": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Litigation_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_LSC_Activity_Name": {
						"type": "String",
						"defaultValue": "Litigation_SecCounsels_Extract"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_payment_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Payment_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_payment",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_payment",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_payment",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_payment",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_payment').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_payment_csv_master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_Payment_CP_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "if_Prev_Payment_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_payment_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "dbx_Start_PL_CP_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_CP_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Payment_CP_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_CP_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_CP_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_payment_checkpayee",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_payment_checkpayee",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@activity('dbx_Start_PL_CP_Audit_Log').output.runOutput.pl_audit_id",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_CP_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_payment_checkpayee",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_CP_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_CP_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_CP_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_payment_checkpayee",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_CP_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_CP_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_payment_checkpayee').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "dbx_Payment_Sent_To_CSV_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "epl_ext_payment_csv_master",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "UPDATE STG_EXT_Payment SET Sent_To_CSV = 1 WHERE Sent_To_CSV = 0;\n",
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Parameters_List": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Payment_CP_Sent_To_CSV_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Payment_Sent_To_CSV_Updates",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "UPDATE STG_EXT_Payment_CheckPayee\nSET Sent_To_CSV = 1 WHERE Sent_To_CSV = 0;",
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Parameters_List": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Payment_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_CP_Activity_Name": {
						"type": "String",
						"defaultValue": "Payment_CheckPayee_Extract"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T04:32:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_primary_status_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "if_Prev_PrimaryStatus_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_primarystatus",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_primary_status",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primarystatus",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primarystatus",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_primarystatus').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_primaryestatus_csv_master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_PrimaryStatus_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_primary_status_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": "  ",
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "PrimarStatus_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_primaryexaminer_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Reserve_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_primaryexaminer",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_primaryexaminer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primaryexaminer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primaryexaminer",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_primaryexaminer').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_primaryexaminer_csv_master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_Reserve_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_primaryexaminer_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "PrimaryExaminer_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T04:32:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_reserve_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Reserve_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_reserve",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_reserve",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_reserve",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_reserve",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_reserve').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_reserve_csv_master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_Reserve_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_reserve_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Reserve_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_Reserve_FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-09T10:45:06Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_secondary_status_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Reserve_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondary_status",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondary_status",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_secondary_status').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_secondary_status",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_secondary_status",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_secondarystatus_csv_master",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_Reserve_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_secondarystatus_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "PrimaryExaminer_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T04:32:46Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_secondaryexaminer_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "if_Prev_SecondaryExaminer_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_secondaryexaminer",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_secondaryexaminer",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"param_PL_Audit_ID": {
												"value": "@activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondaryexaminer",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondaryexaminer",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_secondaryexaminer').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "epl_ext_secondaryexaminer_csv",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "if_Prev_SecondaryExaminer_PL_Complete",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_secondaryexaminer_csv_generation",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "SecondaryExaminer_Extract"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T09:16:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_master_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Intiate_Batch",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"create_batch",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "execute policy_load",
						"description": "Loading for Policy Subject Area",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION_JOB Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Close_Batch",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_e2_policy_coverage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"close_batch",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"@activity('adf_pl_params').output.value[2].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/4977be7f_849e_4852_80e6_c61771709ca5/industryclouddatapipeline-0.0.7-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Load Initiation",
						"description": "Policy version identification",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "Intiate_Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"E2E",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_VERSION",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_ACTION_JOB Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "Load Initiation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"POLICY_ACTION_JOB",
								"raw to stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/9143fd48_1560_495c_9084_21fed6a2adc5/industryclouddatapipeline-0.1.2-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "execute policy_lob load",
						"description": "Loading for Policy Line Of Business Subject Area",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_risk_unit_load",
						"description": "Loading for Policy Risk Unit Subject Area",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_lob load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "adf_pl_e2_policy_coverage",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [
							{
								"activity": "execute policy_risk_unit_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_covergae_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_Cyber_clone"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_lob_load')]",
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_risk_unit_load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_all_extracts')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "epl_Extract_SecondaryExaminer_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_secondaryexaminer_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_Extract_PrimaryExaminer_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_primaryexaminer_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_Extract_Reserve_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_reserve_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_Extract_PrimaryStatus_Master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_primary_status_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_ext_secondary_status_master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_secondary_status_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_ext_insured_payment_master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_insured_payment_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_ext_folder_master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_folder_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_ext_litigation_master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_litigation_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_ext_payment_master",
						"type": "ExecutePipeline",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_payment_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "epl_ext_feature_master",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_feature_master",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T10:21:41Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ext_secondaryexaminer_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_primaryexaminer_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_reserve_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_primary_status_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_secondary_status_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_insured_payment_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_folder_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_litigation_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_payment_master')]",
				"[concat(variables('factoryId'), '/pipelines/pl_ext_feature_master')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Intiate_Batch",
						"description": "",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"create_batch",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "execute policy_load",
						"description": "Loading for Policy Subject Area",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION_JOB Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Close_Batch",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_e2_policy_coverage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"close_batch",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Load Initiation",
						"description": "Policy version identification",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "Intiate_Batch",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_VERSION",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_ACTION_JOB Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "Load Initiation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_ACTION_JOB",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "execute policy_lob load",
						"description": "Loading for Policy Line Of Business Subject Area",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_risk_unit_load",
						"description": "Loading for Policy Risk Unit Subject Area",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_lob load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "adf_pl_e2_policy_coverage",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_risk_unit_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_covergae_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_CYBER"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:11Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_lob_load')]",
				"[concat(variables('factoryId'), '/pipelines/adf_pl_e2_policy_risk_unit_load')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_master')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "epl_ext_all_extracts",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "dbx_Start_Batch_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dbx_Get_MDO_FolderName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "pl_ext_all_extracts",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"param_Batch_ID": {
									"value": "@string(activity('dbx_Start_Batch_Log').output.runOutput)",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@activity('dbx_Get_MDO_FolderName').output.runOutput",
									"type": "Expression"
								},
								"param_CDA_Catalog_Name": {
									"value": "@variables('var_CDA_Catalog_Name')",
									"type": "Expression"
								},
								"param_Refined_Catalog_Name": {
									"value": "@variables('var_Refined_Catalog_Name')",
									"type": "Expression"
								},
								"param_Refined_Schema_Name": {
									"value": "@variables('var_Refined_Schema_Name')",
									"type": "Expression"
								},
								"param_CDA_Schema_Name": {
									"value": "@variables('var_CDA_Schema_Name')",
									"type": "Expression"
								},
								"param_query_container_name": {
									"value": "@variables('var_param_query_container_name')",
									"type": "Expression"
								},
								"param_storage_account_name": {
									"value": "@variables('var_param_storage_account_name')",
									"type": "Expression"
								},
								"param_csv_container_name": {
									"value": "@variables('var_param_csv_container_name')",
									"type": "Expression"
								},
								"param_csv_storage_account_name": {
									"value": "@variables('var_param_csv_storage_account_name')",
									"type": "Expression"
								}
							}
						}
					},
					{
						"name": "dbx_Start_Batch_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Batch_Log",
							"baseParameters": {
								"batch_comments": " ",
								"batch_log_state": {
									"value": "@variables('var_Batch_Log_State_Ins')",
									"type": "Expression"
								},
								"batch_name": {
									"value": "@variables('var_Batch_Name')",
									"type": "Expression"
								},
								"batch_status": {
									"value": "@variables('var_Batch_Status_InProgress')",
									"type": "Expression"
								},
								"refined_catalog_name": {
									"value": "@variables('var_Refined_Catalog_Name')",
									"type": "Expression"
								},
								"refined_schema_name": {
									"value": "@variables('var_Refined_Schema_Name')",
									"type": "Expression"
								},
								"in_batch_id": " ",
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Get_MDO_FolderName",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Config_Value FROM Master_Config\nWHERE Config_Key ={} AND Config_IsActive = {}",
								"Parameters_List": "'MDO_Folder_Name',1",
								"Schema_Name": {
									"value": "@variables('var_Refined_Schema_Name')",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@variables('var_Refined_Catalog_Name')",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_End_Batch_Log_S",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "epl_ext_all_extracts",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Batch_Log",
							"baseParameters": {
								"batch_comments": " ",
								"batch_id": " ",
								"batch_log_state": {
									"value": "@variables('var_Batch_Log_State_Upd')",
									"type": "Expression"
								},
								"batch_name": {
									"value": "@variables('var_Batch_Name')",
									"type": "Expression"
								},
								"batch_status": {
									"value": "@variables('var_Batch_Status_Success')",
									"type": "Expression"
								},
								"refined_catalog_name": {
									"value": "@variables('var_Refined_Catalog_Name')",
									"type": "Expression"
								},
								"refined_schema_name": {
									"value": "@variables('var_Refined_Schema_Name')",
									"type": "Expression"
								},
								"in_batch_id": {
									"value": "@string(activity('dbx_Start_Batch_Log').output.runOutput)",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_End_Batch_Log_F",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "epl_ext_all_extracts",
								"dependencyConditions": [
									"Failed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Batch_Log",
							"baseParameters": {
								"batch_comments": {
									"value": "@activity('epl_ext_all_extracts').Error.Message",
									"type": "Expression"
								},
								"batch_id": " ",
								"batch_log_state": {
									"value": "@variables('var_Batch_Log_State_Upd')",
									"type": "Expression"
								},
								"batch_name": {
									"value": "@variables('var_Batch_Name')",
									"type": "Expression"
								},
								"batch_status": {
									"value": "@variables('var_Batch_Status_Failure')",
									"type": "Expression"
								},
								"refined_catalog_name": {
									"value": "@variables('var_Refined_Catalog_Name')",
									"type": "Expression"
								},
								"refined_schema_name": {
									"value": "@variables('var_Refined_Schema_Name')",
									"type": "Expression"
								},
								"in_batch_id": {
									"value": "@string(activity('dbx_Start_Batch_Log').output.runOutput)",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"var_Batch_ID": {
						"type": "Integer"
					},
					"var_Batch_Name": {
						"type": "String",
						"defaultValue": "CCM_Extracts"
					},
					"var_Batch_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_Batch_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_Batch_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_Batch_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_Batch_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_MDO_Drop_FolderName": {
						"type": "String"
					},
					"var_CDA_Catalog_Name": {
						"type": "String",
						"defaultValue": "dev_dds_edl_refined"
					},
					"var_Refined_Catalog_Name": {
						"type": "String",
						"defaultValue": "dev_dds_edl_refined"
					},
					"var_Refined_Schema_Name": {
						"type": "String",
						"defaultValue": "claims_staging"
					},
					"var_CDA_Schema_Name": {
						"type": "String",
						"defaultValue": "claims"
					},
					"var_param_query_container_name": {
						"type": "String",
						"defaultValue": "mkl-dds-fsys-edl-dev-001"
					},
					"var_param_storage_account_name": {
						"type": "String",
						"defaultValue": "mnause2devddsadls01"
					},
					"var_param_csv_container_name": {
						"type": "String",
						"defaultValue": "test"
					},
					"var_param_csv_storage_account_name": {
						"type": "String",
						"defaultValue": "mnause2devddsadls01"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T17:42:22Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/pl_ext_all_extracts')]"
			]
		}
	]
}