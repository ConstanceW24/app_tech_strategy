{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mna-use2-dev-dds-adf-01"
		},
		"AzureBlobStorage1_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'AzureBlobStorage1'"
		},
		"AzureDataLakeStorage1_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage1'"
		},
		"AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks'"
		},
		"CDA_AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'CDA_AzureDatabricks'"
		},
		"claims_data_extraction_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'claims_data_extraction'"
		},
		"AzureBlobStorage_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'AzureBlobStorage'"
		},
		"AzureDataLakeStorage1_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://mnause2devddsadls01.dfs.core.windows.net/"
		},
		"AzureDatabricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0227-095127-mm0bihzy"
		},
		"CDA_AzureBlobStorage_sasUri": {
			"type": "secureString",
			"metadata": "Secure string for 'sasUri' of 'CDA_AzureBlobStorage'"
		},
		"CDA_AzureDatabricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0522-063449-xazmzggb"
		},
		"claims_data_extraction_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0430-191614-k5iu0hhh"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/globalparameters",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_covergae_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_coverage_stg_load",
						"description": "Loading the stage tables under POLICY COVERAGE\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_coverage_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_coverage_refined_load",
						"description": "Loading the Refined Tables under POLICY COVERAGE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_coverage_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_coverage_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_CYBER"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_covergae_load_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_coverage_stg_load",
						"description": "Loading the stage tables under POLICY COVERAGE\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_coverage_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_coverage_refined_load",
						"description": "Loading the Refined Tables under POLICY COVERAGE",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_coverage_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_coverage_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_Cyber_clone"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_policy_lob_load_copy1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "execute policy_lob_unit_stg_load",
						"description": "Loading the stage tables under Policy_Lob\n",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "execute policy_lob_refined_load",
						"description": "Loading the Refined Tables under Policy_Lob",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "execute policy_lob_unit_stg_load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_Cyber_clone"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:09Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('AzureBlobStorage_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureBlobStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"connectionString": "[parameters('AzureBlobStorage1_connectionString')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage1')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage1_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage1_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3012775336824955.15.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDA_AzureBlobStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": "[parameters('CDA_AzureBlobStorage_sasUri')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CDA_AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3012775336824955.15.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('CDA_AzureDatabricks_accessToken')]"
					},
					"existingClusterId": "[parameters('CDA_AzureDatabricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/claims_data_extraction')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-3012775336824955.15.azuredatabricks.net",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('claims_data_extraction_accessToken')]"
					},
					"existingClusterId": "[parameters('claims_data_extraction_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/tgr_pl_cyber_policy_master')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Stopped",
				"type": "TumblingWindowTrigger",
				"typeProperties": {
					"frequency": "Month",
					"interval": 1,
					"startTime": "2024-04-12T16:22:00Z",
					"delay": "00:00:00",
					"maxConcurrency": 50,
					"retryPolicy": {
						"intervalInSeconds": 30
					},
					"dependsOn": []
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/integrationRuntime1')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "AutoResolve",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						}
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Databricks_Orchestration')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/bc5d5464-b9cd-48a2-a999-e83e40766e6d/resourcegroups/mna-use2-dev-rg-dds-01/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mna-use2-dev-dds-managedidentity-01"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adls-creden')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/bc5d5464-b9cd-48a2-a999-e83e40766e6d/resourcegroups/mna-use2-dev-rg-dds-01/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mna-use2-dev-dds-managedidentity-01"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/user-mi-2')]",
			"type": "Microsoft.DataFactory/factories/credentials",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "ManagedIdentity",
				"typeProperties": {
					"resourceId": "/subscriptions/bc5d5464-b9cd-48a2-a999-e83e40766e6d/resourcegroups/mna-use2-dev-rg-dds-01/providers/Microsoft.ManagedIdentity/userAssignedIdentities/mna-use2-dev-dds-managedidentity-01"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_feature')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Get_Feature_SrcQry",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Feature SPs/NB_Get_feature_SRC_Query",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Gen_Hash_SRC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Load_SRC_EXT_Feature",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Gen_HashKey",
							"baseParameters": {
								"src_table": "SRC_EXT_Feature",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_STG_Feature_Upsert",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Gen_Hash_SRC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Feature SPs/NB_STG_Feature_Upsert",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"PL_Audit_ID": {
									"value": "@pipeline().parameters.param_PL_Audit_ID",
									"type": "Expression"
								},
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Get_Feature_Eco_SrcQry",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Feature SPs/NB_Get_feature_eco_SRC_Query",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Load_SRC_EXT_Feature",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Get_Feature_Eco_SrcQry",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "dbx_Get_Feature_SrcQry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Load_SRC_EXT",
							"baseParameters": {
								"Table_Name": "SRC_EXT_Feature",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"query_location": {
									"value": "@concat(activity('dbx_Get_Feature_SrcQry').output.runOutput, ',', activity('dbx_Get_Feature_Eco_SrcQry').output.runOutput)\n",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_PL_Audit_ID": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_feature_csv')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_feature_FileName",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Config_Value FROM Master_Config WHERE Config_Key ={} AND Config_IsActive = {}",
								"Parameters_List": "'Feature_File_Name',1",
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_copy_feature_CSV_to_mDo",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "sv_feature_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_mdo_csv",
							"baseParameters": {
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"param_MDO_FolderName": {
									"value": "@pipeline().parameters.param_MDO_FolderName",
									"type": "Expression"
								},
								"file_name": {
									"value": "@concat(variables('var_Feature_FileName'),'_',pipeline().parameters.param_dbx_File_TimeStamp,'.csv')",
									"type": "Expression"
								},
								"path": "feature/csv_generation.sql",
								"storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"csv_container_name": {
									"value": "@pipeline().parameters.param_csv_container_name",
									"type": "Expression"
								},
								"query_container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"csv_storage_account_name": {
									"value": "@pipeline().parameters.param_csv_storage_account_name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_feature_Inc_Log_Updates",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_copy_feature_CSV_to_mDo",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Feature SPs/NB_usp_Feature_Inc_Log_Updates",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "sv_feature_FileName",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "dbx_feature_FileName",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "var_Feature_FileName",
							"value": {
								"value": "@if(equals(activity('dbx_feature_FileName').output.runOutput,'None'), 'CCM_Feature_Daily',activity('dbx_feature_FileName').output.runOutput)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_dbx_File_TimeStamp": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Feature_FileName": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_feature_mailingaddress')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Get_Feature_MA_SrcQry",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Feature Ma SPs/NB_Get_feature_MA_SRC_Query",
							"baseParameters": {
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"CDA_Catalog_Name": {
									"value": "@pipeline().parameters.param_CDA_Catalog_Name",
									"type": "Expression"
								},
								"CDA_Schema_Name": {
									"value": "@pipeline().parameters.param_CDA_Schema_Name",
									"type": "Expression"
								},
								"container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Gen_Hash_SRC",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Load_SRC_EXT_Feature_MA_SrcQry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Gen_HashKey",
							"baseParameters": {
								"src_table": "SRC_EXT_Feature_MailingAddress",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_STG_Feature_MA_Upsert",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Gen_Hash_SRC",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Feature Ma SPs/NB_usp_Feature_MA_Upsert",
							"baseParameters": {
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"PL_Audit_ID": {
									"value": "@pipeline().parameters.param_PL_Audit_ID",
									"type": "Expression"
								},
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Load_SRC_EXT_Feature_MA_SrcQry",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_Get_Feature_MA_SrcQry",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Load_SRC_EXT",
							"baseParameters": {
								"Table_Name": "SRC_EXT_Feature_MailingAddress",
								"Refined_Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Refined_Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"storage_account_name": {
									"value": "@pipeline().parameters.param_storage_account_name",
									"type": "Expression"
								},
								"container_name": {
									"value": "@pipeline().parameters.param_query_container_name",
									"type": "Expression"
								},
								"query_location": {
									"value": "@activity('dbx_Get_Feature_MA_SrcQry').output.runOutput",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_PL_Audit_ID": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/claims_data_extraction')]"
			]
		}
	]
}