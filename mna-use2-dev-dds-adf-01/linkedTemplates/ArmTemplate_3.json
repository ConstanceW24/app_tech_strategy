{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mna-use2-dev-dds-adf-01"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_horse_policy_risk_unit_stg_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "POLICY_LOB_RISK_UNIT Stage",
						"description": "policy_lob_risk_unit",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_LOB_RISK_UNIT",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_LOB_RISK_UNIT_SEGMENT Stage load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "LOB_RISK_UNIT_ADDITIONAL_ATTRIBUTE Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_LOB_RISK_UNIT_SEGMENT",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_RISK_UNIT_SEGMENT_ATTRIBUTE Stage load",
						"description": "LOB_RISK_UNIT_SEGMENT_ATTRIBUTE",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "LOB_LOCATION Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"LOB_RISK_UNIT_SEGMENT_ATTRIBUTE",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_RISK_UNIT_ADDITIONAL_ATTRIBUTE Stage load",
						"description": "LOB_RISK_UNIT_ADDITIONAL_ATTRIBUTE",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "LOB_RISK_UNIT_SEGMENT_ATTRIBUTE Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"LOB_RISK_UNIT_ADDITIONAL_ATTRIBUTE",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "LOB_LOCATION Stage load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_LOB_RISK_UNIT Stage",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"LOB_LOCATION",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_CYBER"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_horse_policy_stg_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "POLICY_ACTION Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_ACTION",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PARTY Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"PARTY",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "POLICY_NONPREMIUM Stage load",
						"description": "policy_nonpremium",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "PARTY Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_NONPREMIUM",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_HORSE"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-16T09:54:08Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_repair_cyber_tables')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Optimize Tables",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "Vacuum Tables",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"optimize_table",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Vacuum Tables",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"vacuum_table",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_CYBER"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/epl_ext_litigation_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_LSC_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_LSC_Activity_Name')",
									"type": "Expression"
								},
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"pl_comments": " ",
								"in_pl_audit_id": " "
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Litigation_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_litigation_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_litigation_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_litigation_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_LSC_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"pl_comments": " "
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_litigation_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_litigation_csv').Error.Message",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "if_Prev_Litigation_SecCounsel_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_LSC_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_LSC_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_Litigation_SecCounsel_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_litigation_seccounsel_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_LSC_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_Litigation_SecCounsel_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_LSC_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_LSC_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_LSC_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_Litigation_SecCounsel_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_LSC_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_LSC_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_Litigation_SecCounsel_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_PL_Audit_ID": {
						"type": "String"
					},
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Litigation_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_LSC_Activity_Name": {
						"type": "String",
						"defaultValue": "Litigation_SecCounsels_CSV"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/gw_adf_data_recon_unity_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "get_gw_adf_pl_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dynamic_param_unity",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.TriggerParam, variables('slash'), variables('gw_adf_pl_config'))",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "data_reconciliation",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "get_gw_adf_pl_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/adf_setup.py",
							"parameters": [
								"data_reconciliation_parallel",
								"@activity('get_gw_adf_pl_config').output.value[2].param_value",
								"@activity('get_gw_adf_pl_config').output.value[0].param_value",
								"@activity('get_gw_adf_pl_config').output.value[4].param_value",
								"@activity('get_gw_adf_pl_config').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/5610c152_daa6_4f11_9fb9_0fe1919dfd59/cdaaccelerator-0.0.1-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "CDA_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TriggerParam": {
						"type": "string"
					}
				},
				"variables": {
					"slash": {
						"type": "String",
						"defaultValue": "/"
					},
					"gw_adf_pl_config": {
						"type": "String",
						"defaultValue": "gw_adf_pl_config.csv"
					}
				},
				"folder": {
					"name": "CDA"
				},
				"annotations": [],
				"lastPublishTime": "2024-02-01T13:26:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/gw_adf_dp_process_node_unity_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "ForEachBusinessCenter",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "get_dp_node_process_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('get_dp_node_process_params').output.value",
								"type": "Expression"
							},
							"batchCount": 12,
							"activities": [
								{
									"name": "dp_node_process",
									"type": "DatabricksSparkPython",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pythonFile": "dbfs:/FileStore/adf_setup.py",
										"parameters": [
											"db_process_node",
											"@item().node_list",
											"@item().table_name",
											"@item().fingerprint_id",
											"@item().gw_center",
											"@item().is_synapse"
										],
										"libraries": [
											{
												"whl": "dbfs:/FileStore/jars/cdaaccelerator/cdaaccelerator-0.0.2-py3-none-any.whl"
											}
										]
									},
									"linkedServiceName": {
										"referenceName": "CDA_AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "get_dp_node_process_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "Dp_process_node_unity",
								"type": "DatasetReference",
								"parameters": {
									"dp_processFileName": {
										"value": "@concat(pipeline().parameters.GwcenterName, variables('slash'), variables('dp_process_node_file_path'))",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"GwcenterName": {
						"type": "string"
					}
				},
				"variables": {
					"slash": {
						"type": "String",
						"defaultValue": "/"
					},
					"dp_process_node_file_path": {
						"type": "String",
						"defaultValue": "gw_adf_pl_dp_process_node_config.csv"
					},
					"gw_adf_job_parameters": {
						"type": "String",
						"defaultValue": "gw_adf_job_parameters"
					}
				},
				"folder": {
					"name": "CDA"
				},
				"annotations": [],
				"lastPublishTime": "2024-02-02T11:40:22Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/gw_adf_unity_config_generator_trigger')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "generate_config",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "get_gw_adf_pl_config",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/adf_setup.py",
							"parameters": [
								"generate_config",
								"@activity('get_gw_adf_pl_config').output.value[2].param_value",
								"@activity('get_gw_adf_pl_config').output.value[0].param_value",
								"@activity('get_gw_adf_pl_config').output.value[1].param_value",
								"@activity('get_gw_adf_pl_config').output.value[5].param_value",
								"@activity('get_gw_adf_pl_config').output.value[6].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/5610c152_daa6_4f11_9fb9_0fe1919dfd59/cdaaccelerator-0.0.1-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "CDA_AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "get_gw_adf_pl_config",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "dynamic_param_unity",
								"type": "DatasetReference",
								"parameters": {
									"FileName": {
										"value": "@concat(pipeline().parameters.TriggerParam, variables('slash'), variables('gw_adf_pl_config'))",
										"type": "Expression"
									}
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"TriggerParam": {
						"type": "string"
					}
				},
				"variables": {
					"slash": {
						"type": "String",
						"defaultValue": "/"
					},
					"gw_adf_pl_config": {
						"type": "String",
						"defaultValue": "gw_adf_pl_config.csv"
					}
				},
				"folder": {
					"name": "CDA"
				},
				"annotations": [],
				"lastPublishTime": "2024-02-01T13:26:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/horse_stage_table_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "POLICY_ACTION Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_ACTION",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "ANIMALS Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_LOB_RISK_UNIT Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"ANIMALS",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_LOB Stage load",
						"description": "policy_segment_attribute",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_LOB",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "E2_HORSE_PARAMS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "POLICY_LOB_RISK_UNIT Stage load",
						"description": "party_address",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_LOB_RISK_UNIT",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY COVERAGE Stage Load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "ANIMALS Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_COVERAGE",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "PARTY Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"PARTY",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_NONPREMIUM Stage load",
						"description": "policy_nonpremium",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_NONPREMIUM",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY COVERAGE SEGMENT Stage Load",
						"description": "policy_nonpremium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY COVERAGE Stage Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_COVERAGE_SEGMENT",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY PREMIUM TRANSACTION Stage Load_copy",
						"description": "policy_premium_transaction",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "POLICY COVERAGE SEGMENT Stage Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup_4.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_PREMIUM_TRANSACTION",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_HORSE"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_feature_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Feature_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_feature_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_feature_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_feature_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "dbx_Start_FP_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Phones_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Feature_FP_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_FP_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_FP_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_FP_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature_phones_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_FP_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Phones_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_feature_phones_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_feature_phones_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_FP_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature_phones_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_FP_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Phones_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_feature_phones_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "if_Prev_Feature_FMA_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_FMA_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_FMA_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_FMA_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature_ma_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_FMA_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_MA_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_feature_ma_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_feature_mailingaddress_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_FMA_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_feature_ma_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_FMA_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_MA_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_feature_ma_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "dbx_Start_FMA_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_MA_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Feature_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_MA_Activity_Name": {
						"type": "String",
						"defaultValue": "Exposure_MailingAddress_Extract"
					},
					"var_Phones_Activity_Name": {
						"type": "String",
						"defaultValue": "Exposure_Phones_Extract"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T09:16:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_folder_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Folder_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_folder_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_folder_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_folder_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_folder_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_folder_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Folder_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T09:16:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_insured_payment_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Insured_payment_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_insuredpayment_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_insured_payment_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runoutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_insuredpayment_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_insuredpayment_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_insuredpayment_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "InsuredPayment_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_payment_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Payment_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_payment_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_payment_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_payment_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_payment_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_payment_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "dbx_Start_CP_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_CP_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Payment_CP_PL_Complete_copy1",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_CP_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_CP_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_CP_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_payment_checkpayee_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_CP_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_CP_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_payment_checkpayee_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_payment_checkpayee_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_CP_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_payment_checkpayee_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_CP_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_CP_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_payment_checkpayee_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Payment_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_CP_Activity_Name": {
						"type": "String",
						"defaultValue": "Payment_CheckPayee_CSV"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T09:16:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_primary_status_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Primary_Status_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "epl_ext_primarystatus_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_primary_status_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runoutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primarystatus_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primarystatus_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_primarystatus_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "PrimaryStatus_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_primaryexaminer_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Reserve_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primaryexaminer_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_primaryexaminer_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_primaryexaminer_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_primaryexaminer_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_primaryexaminer_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "PrimaryExaminer_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-10T09:16:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_reserve_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Reserve_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_reserve_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_reserve_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_reserve_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_reserve_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_reserve_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Reserve_FileName": {
						"type": "String"
					},
					"var_PL_Audit_ID": {
						"type": "String"
					},
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "Reserve_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_Prev_Reserve_Status_Complete": {
						"type": "String"
					},
					"var_CSV_File_TimeStamp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-09T14:01:04Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_secondaryexaminer_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Secondaryexaminer_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondaryexaminer_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondaryexaminer_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@variables('var_PL_Audit_ID')",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_secondaryexaminer_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_secondaryexaminer_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_secondaryexaminer_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "SecondaryExaminer_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_Prev_Reserve_Status_Complete": {
						"type": "String",
						"defaultValue": " "
					},
					"var_CSV_File_TimeStamp": {
						"type": "String",
						"defaultValue": " "
					},
					"var_Reserve_FileName": {
						"type": "String",
						"defaultValue": " "
					},
					"var_PL_Audit_ID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T07:57:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pl_ext_secondarystatus_csv_generation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "dbx_File_TimeStamp",
						"type": "DatabricksNotebook",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Select_Statement",
							"baseParameters": {
								"Query": "SELECT Ext_FileSuffix FROM LOG_Batch_Identifier\nWHERE Batch_ID = '{}'",
								"Parameters_List": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								},
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "if_Prev_Secondaryexaminer_PL_Complete",
						"type": "IfCondition",
						"dependsOn": [
							{
								"activity": "dbx_Start_PL_Audit_Log",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"expression": {
								"value": "@equals(activity('dbx_Start_PL_Audit_Log').output.runOutput.Prev_PL_Status_Complete, 'Y')",
								"type": "Expression"
							},
							"ifFalseActivities": [
								{
									"name": "dbx_End_PL_Audit_Log_S",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondarystatus_csv",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@string(activity('dbx_Start_PL_Audit_Log').output.runOutput.pl_audit_id)",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Success')",
												"type": "Expression"
											},
											"pl_comments": " ",
											"batch_id": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "dbx_End_PL_Audit_Log_F",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "epl_ext_secondarystatus_csv",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
										"baseParameters": {
											"Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"Batch_ID": {
												"value": "@pipeline().parameters.param_Batch_ID",
												"type": "Expression"
											},
											"in_pl_audit_id": {
												"value": "@variables('var_PL_Audit_ID')",
												"type": "Expression"
											},
											"pl_activity_name": {
												"value": "@variables('var_Activity_Name')",
												"type": "Expression"
											},
											"pl_comments": {
												"value": "@activity('epl_ext_secondarystatus_csv').Error.Message",
												"type": "Expression"
											},
											"pl_log_state": {
												"value": "@variables('var_PL_Log_State_Upd')",
												"type": "Expression"
											},
											"pl_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pl_status": {
												"value": "@variables('var_PL_Log_Status_Failure')",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "claims_data_extraction",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "epl_ext_secondarystatus_csv",
									"type": "ExecutePipeline",
									"dependsOn": [],
									"policy": {
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"pipeline": {
											"referenceName": "pl_ext_secondarystatus_csv",
											"type": "PipelineReference"
										},
										"waitOnCompletion": true,
										"parameters": {
											"param_Refined_Catalog_Name": {
												"value": "@pipeline().parameters.param_Refined_Catalog_Name",
												"type": "Expression"
											},
											"param_Refined_Schema_Name": {
												"value": "@pipeline().parameters.param_Refined_Schema_Name",
												"type": "Expression"
											},
											"param_MDO_FolderName": {
												"value": "@pipeline().parameters.param_MDO_FolderName",
												"type": "Expression"
											},
											"param_dbx_File_TimeStamp": {
												"value": "@activity('dbx_File_TimeStamp').output.runOutput",
												"type": "Expression"
											},
											"param_CDA_Schema_Name": {
												"value": "@pipeline().parameters.param_CDA_Schema_Name",
												"type": "Expression"
											},
											"param_CDA_Catalog_Name": {
												"value": "@pipeline().parameters.param_CDA_Catalog_Name",
												"type": "Expression"
											},
											"param_storage_account_name": {
												"value": "@pipeline().parameters.param_storage_account_name",
												"type": "Expression"
											},
											"param_query_container_name": {
												"value": "@pipeline().parameters.param_query_container_name",
												"type": "Expression"
											},
											"param_csv_container_name": {
												"value": "@pipeline().parameters.param_csv_container_name",
												"type": "Expression"
											},
											"param_csv_storage_account_name": {
												"value": "@pipeline().parameters.param_csv_storage_account_name",
												"type": "Expression"
											}
										}
									}
								}
							]
						}
					},
					{
						"name": "dbx_Start_PL_Audit_Log",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "dbx_File_TimeStamp",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Shared/Claims Remediation/Parameterized Notebooks/NB_Audit_Log",
							"baseParameters": {
								"Schema_Name": {
									"value": "@pipeline().parameters.param_Refined_Schema_Name",
									"type": "Expression"
								},
								"Catalog_Name": {
									"value": "@pipeline().parameters.param_Refined_Catalog_Name",
									"type": "Expression"
								},
								"pl_activity_name": {
									"value": "@variables('var_Activity_Name')",
									"type": "Expression"
								},
								"in_pl_audit_id": " ",
								"pl_comments": " ",
								"pl_log_state": {
									"value": "@variables('var_PL_Log_State_Ins')",
									"type": "Expression"
								},
								"pl_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pl_status": {
									"value": "@variables('var_PL_Log_Status_InProgress')",
									"type": "Expression"
								},
								"batch_id": {
									"value": "@pipeline().parameters.param_Batch_ID",
									"type": "Expression"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "claims_data_extraction",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"parameters": {
					"param_Batch_ID": {
						"type": "string"
					},
					"param_MDO_FolderName": {
						"type": "string"
					},
					"param_Refined_Catalog_Name": {
						"type": "string"
					},
					"param_Refined_Schema_Name": {
						"type": "string"
					},
					"param_CDA_Catalog_Name": {
						"type": "string"
					},
					"param_CDA_Schema_Name": {
						"type": "string"
					},
					"param_storage_account_name": {
						"type": "string"
					},
					"param_csv_container_name": {
						"type": "string"
					},
					"param_query_container_name": {
						"type": "string"
					},
					"param_csv_storage_account_name": {
						"type": "string"
					}
				},
				"variables": {
					"var_Activity_Name": {
						"type": "String",
						"defaultValue": "SecondaryExaminer_CSV"
					},
					"var_PL_Log_State_Ins": {
						"type": "String",
						"defaultValue": "ins"
					},
					"var_PL_Log_Status_InProgress": {
						"type": "String",
						"defaultValue": "In-Progress"
					},
					"var_PL_Log_State_Upd": {
						"type": "String",
						"defaultValue": "upd"
					},
					"var_PL_Log_Status_Success": {
						"type": "String",
						"defaultValue": "Success"
					},
					"var_PL_Log_Status_Failure": {
						"type": "String",
						"defaultValue": "Failed"
					},
					"var_Prev_Reserve_Status_Complete": {
						"type": "String",
						"defaultValue": " "
					},
					"var_CSV_File_TimeStamp": {
						"type": "String",
						"defaultValue": " "
					},
					"var_Reserve_FileName": {
						"type": "String",
						"defaultValue": " "
					},
					"var_PL_Audit_ID": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Claims Extract"
				},
				"annotations": [],
				"lastPublishTime": "2024-05-15T07:57:41Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_master_refined_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Policy Refined Load",
						"description": "Loading the Refined Tables under Policy",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Policy Risk Unit Refined Load",
						"description": "Loading the Refined Tables under Policy_Risk_Unit",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Policy LOB Refined Load",
						"description": "Loading the Refined Tables under Policy_Lob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Policy Coverage Refined Load",
						"description": "Loading the Refined Tables under POLICY COVERAGE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_coverage_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_CYBER"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_e2_master_stage_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Load Initiation",
						"description": "Policy version identification",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "adf_pl_params",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_VERSION",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "POLICY_ACTION_JOB Stage load",
						"type": "DatabricksSparkPython",
						"dependsOn": [
							{
								"activity": "Load Initiation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pythonFile": "dbfs:/FileStore/main_adf_setup.py",
							"parameters": [
								"stage_load",
								"@activity('adf_pl_params').output.value[0].param_value",
								"@activity('adf_pl_params').output.value[1].param_value",
								"@activity('adf_pl_params').output.value[2].param_value",
								"@activity('adf_pl_params').output.value[5].param_value",
								"@activity('adf_pl_params').output.value[6].param_value",
								"POLICY_ACTION_JOB",
								"stage",
								"@activity('adf_pl_params').output.value[3].param_value"
							],
							"libraries": [
								{
									"whl": "dbfs:/FileStore/jars/cyberclouddatapipeline/industryclouddatapipeline-0.1.5-py3-none-any.whl"
								}
							]
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Policy_Stg Load",
						"description": "Loading the stage tables under Policy\n",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "POLICY_ACTION_JOB Stage load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Policy_LOB_Stg Load",
						"description": "Loading the stage tables under Policy_Lob\n",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Policy_Stg Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Policy_LOB_Risk_Unit_Stg Load",
						"description": "Loading the stage tables under Policy_LOB Risk_Unit\n",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Policy_LOB_Stg Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Policy_Coverage_Stg Load",
						"description": "Loading the stage tables under POLICY COVERAGE\n",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "Policy_LOB_Risk_Unit_Stg Load",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_coverage_stg_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "adf_pl_params",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "job_params",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_CYBER"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/adf_pl_horse_master_refined_load')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Policy Refined Load",
						"description": "Loading the Refined Tables under Policy",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Policy Risk Unit Refined Load",
						"description": "Loading the Refined Tables under Policy_Risk_Unit",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_risk_unit_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Policy LOB Refined Load",
						"description": "Loading the Refined Tables under Policy_Lob",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_lob_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "Policy Coverage Refined Load",
						"description": "Loading the Refined Tables under POLICY COVERAGE",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "adf_pl_e2_policy_coverage_refined_load",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"folder": {
					"name": "E2_CYBER"
				},
				"annotations": []
			},
			"dependsOn": []
		}
	]
}